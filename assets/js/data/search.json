[ { "title": "Home", "url": "https://emb3d.mitre.org", "categories": "", "tags": "", "date": "", "snippet": " MITRE EMB3D&trade; MITRE EMB3D&trade; A knowledge base of cyber threats and associated mitigations for embedded devices HOME BACKGROUND ...", "content": " MITRE EMB3D&trade; MITRE EMB3D&trade; A knowledge base of cyber threats and associated mitigations for embedded devices HOME BACKGROUND GETTING STARTED PROPERTIES LIST PROPERTIES MAPPER THREATS HARDWARE TID-101 TID-102 TID-103 TID-105 TID-106 TID-107 TID-108 TID-109 TID-110 TID-111 TID-113 TID-114 TID-115 TID-116 TID-118 TID-119 SYSTEM SOFTWARE TID-201 TID-202 TID-203 TID-204 TID-205 TID-206 TID-207 TID-208 TID-209 TID-210 TID-211 TID-212 TID-213 TID-214 TID-215 TID-216 TID-217 TID-218 TID-219 TID-220 TID-221 TID-222 TID-223 TID-224 APPLICATION SOFTWARE TID-301 TID-302 TID-303 TID-304 TID-305 TID-306 TID-307 TID-308 TID-309 TID-310 TID-311 TID-312 TID-313 TID-314 TID-315 TID-316 TID-317 TID-318 TID-319 TID-320 TID-321 TID-322 TID-323 TID-324 TID-325 TID-326 TID-327 TID-328 TID-329 TID-330 NETWORKING TID-401 TID-404 TID-405 TID-406 TID-407 TID-408 TID-410 TID-411 TID-412 MITIGATIONS FOUNDATIONAL MID-001 MID-004 MID-010 MID-011 MID-012 MID-013 MID-016 MID-017 MID-018 MID-021 MID-026 MID-027 MID-030 MID-031 MID-032 MID-034 MID-035 MID-036 MID-037 MID-038 MID-039 MID-041 MID-042 MID-043 MID-044 MID-046 MID-047 MID-049 MID-050 MID-051 MID-052 MID-054 MID-056 MID-057 MID-058 MID-071 MID-072 MID-073 MID-074 MID-075 MID-076 MID-077 MID-078 MID-079 MID-080 MID-083 INTERMEDIATE MID-002 MID-005 MID-007 MID-008 MID-009 MID-014 MID-015 MID-019 MID-020 MID-022 MID-023 MID-028 MID-029 MID-033 MID-040 MID-045 MID-048 MID-053 MID-055 MID-059 MID-060 MID-061 MID-063 MID-064 MID-065 MID-066 MID-067 MID-068 MID-069 MID-081 MID-082 LEADING MID-003 MID-006 MID-024 MID-025 MID-062 MID-070 ABOUT TERMS OF USE Home MITRE EMB3D&trade; Cancel The MITRE EMB3D&trade; Threat Model The EMB3D Threat Model provides a cultivated knowledge base of cyber threats to embedded devices, providing a common understanding of these threats with security mechanisms to mitigate them. New: We have just released the EMB3D Mitigations! See the the new Mitigations tab on the left and the mappings added into each Threat page. The EMB3D Whitepaper was also updated to include our methodology for choosing and categorizing mitigations.What is EMB3D&trade; EMB3D is a threat model for embedded devices found in industries such as critical infrastructure, Internet of Things, automotive, healthcare, manufacturing, and many more. The threat model is intended to be a resource to help vendors, asset owners/operators, test organizations, and security researchers to improve the overall security of embedded devices' hardware and software. This threat model aims to serve as a central repository of information, defining known threats to embedded devices and their unique device features/properties that enable specific threat actions. By mapping the threats to the associated device features/properties, the user can easily enumerate threat exposure based on the known device features. Device Properties Device properties describe a device's hardware and software components and capabilities of a device. These include physical hardware, network services and protocols, software, and firmware. Each category is further divided into sub-properties that are then mapped to a set of threats. By mapping properties, users can identify the threats associated with a given device property. Threats EMB3D threats identify how a threat actor can achieve a specific objective or effect on a system or device. Each threat description includes (i) information about the technical features that are targeted by the threat; (ii) the actions that must be performed by the threat actor to cause the threat's effect, including the impact or effect the threat will have on the device; and (iii) the vulnerabilities or weaknesses within that mechanism that enable the threat actions. Mitigations Mitigation strategies and techniques are described for each threat. These can be leveraged by device vendors to prevent and reduce the risk of a threat, and by end users to validate that devices are sufficiently protected against that threat. The mitigations define the mechanisms or technologies that protect against the threat while remaining flexible in how mitigations can be implemented within the device's unique constraints. EMB3D Users Device Vendors Support device threat models and provide guidelines for mitigations requirements/designs. Develop device roadmaps for evaluating device risk and prioritizing mitigation efforts. Asset Owners & Operators Inform acquisition requirements and decisions about unmitigated threats/risks. Support acquisition efforts related to evaluating a device's security capabilities. Guide the development and deployment of compensating controls around unmitigated threats. Security Researchers/Testers Scope assessment activities and outcomes. Help identify potential trouble spots for deeper investigation. Contribute to research efforts around novel threats and mitigations. More Information Background Getting Started Whitepaper Contact Us Cookie Preferences Privacy Policy © 2023-2024 The MITRE Corporation. Terms of Use. MITRE is a registered trademark of The MITRE Corporation. Using the Chirpy theme for Jekyll. " }, { "title": "Background", "url": "/background/", "categories": "", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "EMB3D™ BackgroundThe EMB3D Threat Model provides a cultivated knowledge base of cyber threats to embedded devices, providing a common understanding of these threats with security mechanisms to miti...", "content": "EMB3D™ BackgroundThe EMB3D Threat Model provides a cultivated knowledge base of cyber threats to embedded devices, providing a common understanding of these threats with security mechanisms to mitigate them.Leveraging established models to strengthen embedded device security​​EMB3D aligns with and expands on several existing models like Common Weakness Enumeration, MITRE ATT&amp;CK®, and Common Vulnerabilities and Exposures, specifically focusing on embedded devices. ​EMB3D provides a cultivated knowledge base of cyber threats to devices, including those observed in the field environment or demonstrated through proofs-of-concept and theoretic research. Mapping these threats to device properties helps users develop and tailor accurate threat models for specific embedded devices. For each threat, suggested mitigations are provided for technical mechanisms that device vendors should implement to mitigate the given threat by building security into the device. EMB3D is a comprehensive framework for the entire security ecosystem — device vendors, asset owners and operators, security researchers, and testing organizations.A framework for a dynamic threat landscapeEMB3D is a living framework that will be updated with new threats and mitigations as security researchers discover new vulnerabilities, threats, and security defenses. EMB3D is a public, community resource where all information is openly available, and the security community can submit additions and revisions.More InformationWhitepaper" }, { "title": "Getting Started", "url": "/getting-started/", "categories": "", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "Applying EMB3D™Step 1. Enumerate device properties and map to threats First, identify the set of Device Properties List that apply to the device being evaluated based on device knowl...", "content": "Applying EMB3D™Step 1. Enumerate device properties and map to threats First, identify the set of Device Properties List that apply to the device being evaluated based on device knowledge and documentation. While a vendor may be able to fully enumerate all properties, an asset operator or security researcher may need to review available documentation or perform initial device testing or decomposition to fully enumerate the relevant properties. Select the applicable properties in the Properties Mapper Tool to generate the list of Threats the device may be exposed to because it incorporates those properties and features. Properties to Threats MapperStep 2. Enumerate threats and evaluate their relevance/risk After identifying the device’s properties list and obtaining the candidate threat mapping, the next step is to review each potential threat to determine if it truly applies to the device and how much risk it poses. For additional details, follow the threat detail links output by the Mapper Tool or look up the associated Threat ID (TID) in the Threats catalog. Each threat description provides additional information about that threat, including its maturity level, documented threat evidence and CVEs, and associated weaknesses from the CWE database. This information helps to better understand the mechanics of the threat, its prerequisites, how it manifests on embedded devices, and how threat actors might utilize it, which can be used to better understand the risk of that threat to the device in question. Step 3. Identify required mitigations Equipped with a list of threats that pose a viable risk to the device, the next step is to determine if the device sufficiently defends against those threats. Each threat description includes a set of Foundational, Intermediate, and Leading mitigations. These mitigations provide guidance on what technical mechanisms can best prevent or reduce the risk of that threat. Mitigations will include references to guidance documents and best practices, along with information about potential limitations and challenges when deploying each mitigation. The mitigation recommendations can then be used to make decisions and plans about the device. Device vendors may use the mitigations mapping to prioritize their security engineering efforts and choose technical security mechanisms that will be most effective against current and future threats. Asset owners and operators may use it to inform acquisitions, make judgements about the risks of devices deployed in their environments, or what additional environmental-level mitigations they wish to make to address residual risk. Finally, security researchers can use this information to organize and triage their efforts to determine which aspects of a device are worth deeper investigation. " }, { "title": "Properties List", "url": "/properties-list/", "categories": "", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": " EMB3D&trade; Device Properties Download CSV Hardware ...", "content": " EMB3D&trade; Device Properties Download CSV Hardware Device Properties Threats PID-11 Device includes a microprocessor TID-101 Power Consumption Analysis Side Channel TID-102 Electromagnetic Analysis Side Channel TID-103 Cache Timing Analysis Side Channel TID-105 Hardware Fault Injection – Control Flow Modification PID-121 Device includes buses for external memory/storage TID-106 Data Bus Interception PID-122 Device includes discrete chips/devices that have access to the same physical memory TID-107 Unauthorized Direct Memory Access (DMA) PID-123 Device includes ROM, VRAM, or removable Storage TID-108 ROM/NVRAM Data Extraction or Modification PID-124 Device includes Random Access Memory (RAM) chips TID-109 RAM Chip Contents Readout PID-1241 Device includes DDR DRAM TID-110 Hardware Fault Injection – Data Manipulation PID-13 Device includes peripheral chips and integrated data buses TID-113 Unverified Peripheral Firmware Loaded TID-114 Peripheral Data Bus Interception PID-14 Device includes external peripheral interconnects (e.g., USB, Serial) TID-111 Untrusted External Storage TID-118 Weak Peripheral Port Electrical Damage Protection PID-15 Device includes a hardware access port (e.g., UART, JTAG) TID-115 Firmware/Data Extraction via Hardware Interface TID-116 Latent Privileged Access Port TID-119 Latent Hardware Debug Port Allows Memory/Code Manipulation System Software Device Properties Threats PID-21 Device includes a bootloader TID-201 Inadequate Bootloader Protection and Verification PID-22 Device includes a debugging capabilities TID-224 Excessive Access via Software Diagnostic Features PID-23 Device includes OS/kernel TID-202 Exploitable System Network Stack Component TID-218 Operating System Susceptible to Rootkit PID-231 Device includes an operating system that uses drivers/modules that can be loaded TID-203 Malicious OS Kernel Driver/Module Installable PID-2321 Device lacks an access enforcement/privilege mechanism TID-204 Untrusted Programs Can Access Privileged OS Functions PID-23221 Device includes and enforces OS user accounts TID-205 Existing OS Tools Maliciously Used for Device Manipulation TID-219 OS/Kernel Privilege Escalation PID-23222 Device includes a memory management model, including protections of memory access (read-only/, executable, writable) TID-206 Memory Management Protections Subverted TID-223 System Susceptible to RAM Scraping PID-241 Device includes containers TID-207 Container Escape PID-242 Device includes hypervisor TID-208 Virtual Machine Escape TID-209 Host Can Manipulate Guest Virtual Machines PID-251 Root of Trust is physically accessible or is not immutable TID-214 Secrets Extracted from Device Root of Trust PID-252 Root of Trust is immutable TID-220 Unpatchable Hardware Root of Trust PID-26 Device lacks firmware/software update support TID-210 Device Vulnerabilities Unpatchable PID-271 Device has firmware or software that is not cryptographically checked for integrity validation TID-211 Device Allows Unauthenticated Firmware Installation PID-272 Device includes cryptographic firmware/software integrity protection mechanisms TID-214 Secrets Extracted from Device Root of Trust TID-330 Cryptographic Timing Side-Channel PID-2721 Device includes a shared key for firmware integrity validation TID-212 FW/SW Update Integrity Shared Secrets Extraction PID-2722 Device includes digitally signed firmware (with private key) TID-213 Faulty FW/SW Update Integrity Verification PID-273 Device has unencrypted firmware updates TID-215 Unencrypted SW/FW Updates PID-274 Device includes user firmware/software version selection during updates TID-216 Firmware Update Rollbacks Allowed PID-275 Device includes remotely-initiated firmware/software updates TID-217 Remotely Initiated Updates Can Cause DoS Application Software Device Properties Threats PID-31 Application-level software is present and running on the device TID-301 Applications Binaries Modified PID-311 Device includes the usage of a web/HTTP applications TID-319 Cross Site Scripting (XSS) TID-320 SQL Injection TID-321 HTTP Application Session Hijacking TID-322 Cross Site Request Forgery (CSRF) TID-323 HTTP Path Traversal TID-324 HTTP Direct Object Reference TID-325 HTTP Injection/Response Splitting PID-3121 Device includes support for object oriented programming languages(e.g., Java, Python, PHP, C++) TID-326 Insecure Deserialization PID-3122 Device includes support for manual memory management programming languages (e.g. C, C++) TID-327 Out of Bounds Memory Access PID-32 Device includes the ability to deploy custom or external programs (e.g., ladder logic, compiled binaries) TID-302 Install Untrusted Application PID-321 Device includes ability to deploy custom programs from engineering software or IDE TID-303 Excessive Trust in Offboard Management/IDE Software PID-322 Device includes a program runtime environment for custom or external programs TID-304 Manipulate Runtime Environment PID-3231 Device includes ability to run custom/external programs as native binary without a confined/restricted environment TID-305 Program Executes Dangerous System Calls PID-3232 Device includes ability to run custom/external programs/processes through an execution sandboxed environment TID-306 Sandboxed Environments Escaped PID-324 Device includes support for \"program uploads\" to retrieve programs from the device from an engineering workstation TID-307 Device Code Representations Inconsistent TID-308 Code Overwritten to Avoid Detection TID-309 Device Exploits Engineering Workstation PID-331 Device includes unauthenticated services TID-310 Remotely Accessible Unauthenticated Services PID-332 Device includes authenticated services TID-311 Default Credentials TID-312 Credential Change Mechanism Can Be Abused TID-313 Unauthenticated Session Changes Credential TID-328 Hardcoded Credentials PID-3321 Device includes passwords to authenticate the users TID-314 Passwords Can Be Guessed Using Brute-Force Attempts TID-315 Password Retrieval Mechanism Abused TID-329 Improper Password Storage PID-3322 Device includes cryptographic mechanism to authenticate users and sessions TID-316 Incorrect Certificate Verification Allows Authentication Bypass TID-317 Predictable Cryptographic Key TID-318 Insecure Cryptographic Implementation TID-330 Cryptographic Timing Side-Channel TID-411 Weak/Insecure Cryptographic Protocol Networking Device Properties Threats PID-41 Device exposes remote network services TID-222 Critical System Service May Be Disabled TID-310 Remotely Accessible Unauthenticated Services TID-401 Undocumented Protocol Features TID-404 Remotely Triggerable Deadlock/DoS TID-405 Network Stack Resource Exhaustion TID-407 Missing Message Replay Protection PID-4111 Device lacks protocol support for message authentication TID-406 Unauthorized Messages or Connections PID-4112 Device lacks protocol support for message encryption TID-408 Unencrypted Sensitive Data Communication PID-4113 Device includes cryptographic functions for sensitive data, such as encryption or authentication TID-221 Authentication Bypass By Message Replay TID-316 Incorrect Certificate Verification Allows Authentication Bypass TID-317 Predictable Cryptographic Key TID-318 Insecure Cryptographic Implementation TID-330 Cryptographic Timing Side-Channel TID-410 Cryptographic Protocol Side Channel TID-411 Weak/Insecure Cryptographic Protocol PID-42 Device includes procedure to forward or route network messages TID-412 Network Routing Capability Abuse " }, { "title": "Properties Mapper", "url": "/properties-mapper/", "categories": "", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": " EMB3D&trade; Properties to Threats Mapping The properties tool encodes the mapping from Device Properties to EMB3D Threats. Start by selecting the properties relevant to the device you ar...", "content": " EMB3D&trade; Properties to Threats Mapping The properties tool encodes the mapping from Device Properties to EMB3D Threats. Start by selecting the properties relevant to the device you are mapping from using the checkboxes in each of the four categories below. As you select properties, additional sub-properties may be uncovered, and the Applicable Threats list is populated with entries that may be relevant to your device. When finished, you may save a copy of the threats report by clicking the 'Download CSV' button. Properties List Device Properties: Hardware: PID-11 - Device includes a microprocessor PID-12 - Device includes Memory/Storage (external to CPU) PID-121 - Device includes buses for external memory/storage PID-122 - Device includes discrete chips/devices that have access to the same physical memory PID-123 - Device includes ROM, VRAM, or removable Storage PID-124 - Device includes Random Access Memory (RAM) chips PID-1241 - Device includes DDR DRAM PID-13 - Device includes peripheral chips and integrated data buses PID-14 - Device includes external peripheral interconnects (e.g., USB, Serial) PID-15 - Device includes a hardware access port (e.g., UART, JTAG) System Software: PID-21 - Device includes a bootloader PID-22 - Device includes a debugging capabilities PID-23 - Device includes OS/kernel PID-231 - Device includes an operating system that uses drivers/modules that can be loaded PID-232 - Device includes separate users/processes with access to different OS data or functions PID-2321 - Device lacks an access enforcement/privilege mechanism PID-2322 - Device deploys an access enforcement/privilege mechanism PID-23221 - Device includes and enforces OS user accounts PID-23222 - Device includes a memory management model, including protections of memory access (read-only/, executable, writable) PID-24 - Device includes virtualization and containers PID-241 - Device includes containers PID-242 - Device includes hypervisor PID-25 - Device includes software/hardware root of trust PID-251 - Root of Trust is physically accessible or is not immutable PID-252 - Root of Trust is immutable PID-26 - Device lacks firmware/software update support PID-27 - Device includes support for firmware/software updates PID-271 - Device has firmware or software that is not cryptographically checked for integrity validation PID-272 - Device includes cryptographic firmware/software integrity protection mechanisms PID-2721 - Device includes a shared key for firmware integrity validation PID-2722 - Device includes digitally signed firmware (with private key) PID-273 - Device has unencrypted firmware updates PID-274 - Device includes user firmware/software version selection during updates PID-275 - Device includes remotely-initiated firmware/software updates Application Software: PID-31 - Application-level software is present and running on the device PID-311 - Device includes the usage of a web/HTTP applications PID-312 - Device includes programming languages and libraries PID-3121 - Device includes support for object oriented programming languages(e.g., Java, Python, PHP, C++) PID-3122 - Device includes support for manual memory management programming languages (e.g. C, C++) PID-32 - Device includes the ability to deploy custom or external programs (e.g., ladder logic, compiled binaries) PID-321 - Device includes ability to deploy custom programs from engineering software or IDE PID-322 - Device includes a program runtime environment for custom or external programs PID-323 - Device includes support for program executable formats PID-3231 - Device includes ability to run custom/external programs as native binary without a confined/restricted environment PID-3232 - Device includes ability to run custom/external programs/processes through an execution sandboxed environment PID-324 - Device includes support for \"program uploads\" to retrieve programs from the device from an engineering workstation PID-33 - Device includes interactive services (e.g., Telnet, SSH) PID-331 - Device includes unauthenticated services PID-332 - Device includes authenticated services PID-3321 - Device includes passwords to authenticate the users PID-3322 - Device includes cryptographic mechanism to authenticate users and sessions Networking: PID-41 - Device exposes remote network services PID-411 - Device exposes remote services with the ability to send, receive, view or modify sensitive information or configurations PID-4111 - Device lacks protocol support for message authentication PID-4112 - Device lacks protocol support for message encryption PID-4113 - Device includes cryptographic functions for sensitive data, such as encryption or authentication PID-42 - Device includes procedure to forward or route network messages Applicable Threats: Download CSV " }, { "title": "Threats", "url": "/threats/", "categories": "", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": " EMB3D&trade; Threats Enumeration Hardware TID-101: Power Consumption Analysis Side Channel ...", "content": " EMB3D&trade; Threats Enumeration Hardware TID-101: Power Consumption Analysis Side Channel TID-102: Electromagnetic Analysis Side Channel TID-103: Cache Timing Analysis Side Channel TID-105: Hardware Fault Injection – Control Flow Modification TID-106: Data Bus Interception TID-107: Unauthorized Direct Memory Access (DMA) TID-108: ROM/NVRAM Data Extraction or Modification TID-109: RAM Chip Contents Readout TID-110: Hardware Fault Injection – Data Manipulation TID-111: Untrusted External Storage TID-113: Unverified Peripheral Firmware Loaded TID-114: Peripheral Data Bus Interception TID-115: Firmware/Data Extraction via Hardware Interface TID-116: Latent Privileged Access Port TID-118: Weak Peripheral Port Electrical Damage Protection TID-119: Latent Hardware Debug Port Allows Memory/Code Manipulation System Software TID-201: Inadequate Bootloader Protection and Verification TID-202: Exploitable System Network Stack Component TID-203: Malicious OS Kernel Driver/Module Installable TID-204: Untrusted Programs Can Access Privileged OS Functions TID-205: Existing OS Tools Maliciously Used for Device Manipulation TID-206: Memory Management Protections Subverted TID-207: Container Escape TID-208: Virtual Machine Escape TID-209: Host Can Manipulate Guest Virtual Machines TID-210: Device Vulnerabilities Unpatchable TID-211: Device Allows Unauthenticated Firmware Installation TID-212: FW/SW Update Integrity Shared Secrets Extraction TID-213: Faulty FW/SW Update Integrity Verification TID-214: Secrets Extracted from Device Root of Trust TID-215: Unencrypted SW/FW Updates TID-216: Firmware Update Rollbacks Allowed TID-217: Remotely Initiated Updates Can Cause DoS TID-218: Operating System Susceptible to Rootkit TID-219: OS/Kernel Privilege Escalation TID-220: Unpatchable Hardware Root of Trust TID-221: Authentication Bypass By Message Replay TID-222: Critical System Service May Be Disabled TID-223: System Susceptible to RAM Scraping TID-224: Excessive Access via Software Diagnostic Features Application Software TID-301: Applications Binaries Modified TID-302: Install Untrusted Application TID-303: Excessive Trust in Offboard Management/IDE Software TID-304: Manipulate Runtime Environment TID-305: Program Executes Dangerous System Calls TID-306: Sandboxed Environments Escaped TID-307: Device Code Representations Inconsistent TID-308: Code Overwritten to Avoid Detection TID-309: Device Exploits Engineering Workstation TID-310: Remotely Accessible Unauthenticated Services TID-311: Default Credentials TID-312: Credential Change Mechanism Can Be Abused TID-313: Unauthenticated Session Changes Credential TID-314: Passwords Can Be Guessed Using Brute-Force Attempts TID-315: Password Retrieval Mechanism Abused TID-316: Incorrect Certificate Verification Allows Authentication Bypass TID-317: Predictable Cryptographic Key TID-318: Insecure Cryptographic Implementation TID-319: Cross Site Scripting (XSS) TID-320: SQL Injection TID-321: HTTP Application Session Hijacking TID-322: Cross Site Request Forgery (CSRF) TID-323: HTTP Path Traversal TID-324: HTTP Direct Object Reference TID-325: HTTP Injection/Response Splitting TID-326: Insecure Deserialization TID-327: Out of Bounds Memory Access TID-328: Hardcoded Credentials TID-329: Improper Password Storage TID-330: Cryptographic Timing Side-Channel Networking TID-401: Undocumented Protocol Features TID-404: Remotely Triggerable Deadlock/DoS TID-405: Network Stack Resource Exhaustion TID-406: Unauthorized Messages or Connections TID-407: Missing Message Replay Protection TID-408: Unencrypted Sensitive Data Communication TID-410: Cryptographic Protocol Side Channel TID-411: Weak/Insecure Cryptographic Protocol TID-412: Network Routing Capability Abuse " }, { "title": "Mitigations", "url": "/mitigations/", "categories": "", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": " EMB3D&trade; Mitigations MID-001: Software Only Bootloader Authentication MID-002: Hardware-backed Bootloader Authentication MID-0...", "content": " EMB3D&trade; Mitigations MID-001: Software Only Bootloader Authentication MID-002: Hardware-backed Bootloader Authentication MID-003: Periodic/Continuous Integrity Measurement and Remote Attestation MID-004: Memory Hardening Against Code Injection MID-005: Memory Safe Programming Languages MID-006: Driver Memory Isolation MID-007: Control Flow Manipulation Protections MID-008: Decidable Protocols and Parsers MID-009: Operating System-based Runtime Integrity Check MID-010: No Runtime OS Driver Load MID-011: OS Driver/Peripheral Authentication MID-012: OS-based Access Control Mechanisms MID-013: Process and Thread Memory Segmentation MID-014: Sandboxing MID-015: Containerization MID-016: Least Functionality MID-017: Security-relevant Auditing and Logging MID-018: Require Authentication for Privileged Functions MID-019: ROP Gadget Minimization MID-020: Pointer Authentication MID-021: VM Hardening MID-022: Segmentation Through Hardware-assisted VMs MID-023: Hypervisor Hardening MID-024: Encrypted VM Isolation MID-025: End-of-Life Management Features MID-026: Secure Firmware Update MID-027: Validated Cryptographic Libraries MID-028: Hardware-backed Key Storage MID-029: Hardware Root of Trust MID-030: Firmware Rollback Protections MID-031: Physical Presence Validation MID-032: System Service Availability Manager MID-033: Unique Factory Preinstalled Secret Keys MID-034: Authenticate Network Messages MID-035: Encrypt Network Traffic MID-036: Cryptographic Nonces MID-037: Network Timestamps MID-038: Authenticate for Administrative Actions MID-039: Restrict Software Diagnostic Functions MID-040: Cryptographically Signed Custom Programs MID-041: Cryptographically Signed Vendor-supplied Programs MID-042: Device Checks Consistency Between Binary/Running Code and Textual Code MID-043: Manage Default Login Credentials MID-044: Strong Cryptographic Algorithms and Protocols MID-045: Multi-factor Authentication MID-046: Authentication Attempts Timeouts and Lockouts MID-047: Sufficient Entropy for Keys MID-048: Hardware Random Number Generator MID-049: Secure Password Storage MID-050: Operating System Defenses Against Microarchitecture Feature Side Channels MID-051: Disallow User-Provided Code MID-052: Physically Protect Circuit Board Traces and Chip Pins MID-053: Use IOMMU to Implement DMA Access Controls MID-054: Encrypt and Authenticate Non-volatile Storage Contents MID-055: Use Highly Integrated Processors to Avoid Physical Attacks MID-056: Allow Device Administrators to Disable Removable Storage Support MID-057: Disable Physical Development and Debugging Ports MID-058: Engage Hardware Readout Protection Mechanisms MID-059: Software Patterns for Side Channel Resistance MID-060: Dedicated Hardware Cryptographic Modules MID-061: Use Separate Processors for Isolation MID-062: Hardware Mitigations for Fault Injection MID-063: Software Mitigations for Fault Injection MID-064: Store Critical Code and Data in On-Chip Memory MID-065: RAM Encryption MID-066: Implement Redundant Processing and Memory MID-067: Implement DRAM RowHammer-resistant DRAM and Memory Controllers MID-068: Data Bus Encryption and Message Authentication MID-069: Electrical Fault Protection MID-070: Peripheral Component Authentication MID-071: Sanitized and Escaped User Data for Web Applications MID-072: Parameterized SQL Queries MID-073: Secure HTTP Session Management MID-074: Cross Site Request Forgery Mitigations MID-075: Path Traversal Protections MID-076: Web Direct Object Reference Authentication MID-077: Secure Deserialization MID-078: HTTP Request/Response Validation MID-079: Remove Undocumented Network Functionality MID-080: Network Request Processing Limits MID-081: Secure Network Tunnels MID-082: Post-quantum Cryptography MID-083: Network Firewall/Access Control List " }, { "title": "About", "url": "/about/", "categories": "", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "AcknowledgementsThe model is a result of a collaborative effort by MITRE, Niyo Little Thunder Pearson, Red Balloon Security, and Narf Industries.After garnering significant interest for peer review...", "content": "AcknowledgementsThe model is a result of a collaborative effort by MITRE, Niyo Little Thunder Pearson, Red Balloon Security, and Narf Industries.After garnering significant interest for peer review across diverse industries, numerous organizations piloted the threat model, offering invaluable feedback. We appreciate the interest and feedback from vendors and integrators across many industries including energy, water, manufacturing, robotics, aerospace, health, automotive, as well as researchers and threat tool vendors. This ongoing collaborative effort has been instrumental in refining and enhancing the model’s content and useability. We look forward to continued collaboration to strengthen the ability of the model to enable “secure by design.”Contact UsPlease send inquiries about EMB3D to emb3d@mitre.org  LegalMaterial on this site is ©2024 The MITRE Corporation. The EMBED framework and web site content may be used according to the Terms of Use.This project makes use of MITRE ATT&amp;CK®.ATT&amp;CK® Terms of Use - https://attack.mitre.org/resources/legal-and-branding/terms-of-use/See the ATT&amp;CK® FAQ for more information on how to use and represent the ATT&amp;CK name." }, { "title": "Terms Of Use", "url": "/terms-of-use/", "categories": "", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "Terms of UseLICENSEThe MITRE Corporation (MITRE) hereby grants you a non-exclusive, royalty-free license to use EMB3D™ for internal business purposes only. Any copy you make for such purposes is au...", "content": "Terms of UseLICENSEThe MITRE Corporation (MITRE) hereby grants you a non-exclusive, royalty-free license to use EMB3D™ for internal business purposes only. Any copy you make for such purposes is authorized provided that you reproduce MITRE’s copyright designation and this license in any such copy.“© 2024 The MITRE Corporation. This work is reproduced and distributed with the permission of The MITRE Corporation.”For all other uses of EMB3D™, contact MITRE at emb3d@mitre.org.DISCLAIMERSMITRE does not claim EMB3D™ enumerates all possibilities for the types of actions and behaviors documented as part of EMB3D™’s adversary model and framework of techniques. Using the information contained within EMB3D™ to address or cover full categories of techniques will not guarantee full defensive coverage as there may be undisclosed techniques or variations on existing techniques not documented by EMB3D™.ALL DOCUMENTS AND THE INFORMATION CONTAINED THEREIN ARE PROVIDED ON AN “AS IS” BASIS AND THE CONTRIBUTOR, THE ORGANIZATION HE/SHE REPRESENTS OR IS SPONSORED BY (IF ANY), THE MITRE CORPORATION, ITS BOARD OF TRUSTEES, OFFICERS, AGENTS, AND EMPLOYEES, DISCLAIM ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, ANY WARRANTY THAT THE USE OF THE INFORMATION THEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF ACCURACY, NONINFRINGEMENT, MERCHANTABILITY, OR FITNESS FOR A PARTICULAR PURPOSE." } , { "title": "Hardware", "url": "/threats/hardware.html", "categories": "", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "Hardware TID-101 - Power Consumption Analysis Side Channel TID-102 - Electromagnetic Analysis Side Channel TID-103 - Cache Timing Analysis Side Channel TID-105 - Hardware Fault Injection – Cont...", "content": "Hardware TID-101 - Power Consumption Analysis Side Channel TID-102 - Electromagnetic Analysis Side Channel TID-103 - Cache Timing Analysis Side Channel TID-105 - Hardware Fault Injection – Control Flow Modification TID-106 - Data Bus Interception TID-107 - Unauthorized Direct Memory Access (DMA) TID-108 - ROM/NVRAM Data Extraction or Modification TID-109 - RAM Chip Contents Readout TID-110 - Hardware Fault Injection – Data Manipulation TID-111 - Untrusted External Storage TID-113 - Unverified Peripheral Firmware Loaded TID-114 - Peripheral Data Bus Interception TID-115 - Firmware/Data Extraction via Hardware Interface TID-116 - Latent Privileged Access Port TID-118 - Weak Peripheral Port Electrical Damage Protection TID-119 - Latent Hardware Debug Port Allows Memory/Code Manipulation" }, { "title": "System Software", "url": "/threats/system-software.html", "categories": "", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "System Software TID-201 - Inadequate Bootloader Protection and Verification TID-202 - Exploitable System Network Stack Component TID-218 - Operating System Susceptible to Rootkit TID-203 - Mali...", "content": "System Software TID-201 - Inadequate Bootloader Protection and Verification TID-202 - Exploitable System Network Stack Component TID-218 - Operating System Susceptible to Rootkit TID-203 - Malicious OS Kernel Driver/Module Installable TID-204 - Untrusted Programs Can Access Privileged OS Functions TID-205 - Existing OS Tools Maliciously Used for Device Manipulation TID-206 - Memory Management Protections Subverted TID-207 - Container Escape TID-208 - Virtual Machine Escape TID-209 - Host Can Manipulate Guest Virtual Machines TID-210 - Device Vulnerabilities Unpatchable TID-211 - Device Allows Unauthenticated Firmware Installation TID-212 - FW/SW Update Integrity Shared Secrets Extraction TID-213 - Faulty FW/SW Update Integrity Verification TID-214 - Secrets Extracted from Device Root of Trust TID-215 - Unencrypted SW/FW Updates TID-216 - Firmware Update Rollbacks Allowed TID-217 - Remotely Initiated Updates Can Cause DoS TID-219 - OS/Kernel Privilege Escalation TID-220 - Unpatchable Hardware Root of Trust TID-221 - Authentication Bypass By Message Replay TID-222 - Critical System Service May Be Disabled TID-223 - System Susceptible to RAM Scraping TID-224 - Excessive Access via Software Diagnostic Features" }, { "title": "Application Software", "url": "/threats/application-software.html", "categories": "", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "Application Software TID-301 - Applications Binaries Modified TID-302 - Install Untrusted Application TID-303 - Excessive Trust in Offboard Management/IDE Software TID-304 - Manipulate Runtime ...", "content": "Application Software TID-301 - Applications Binaries Modified TID-302 - Install Untrusted Application TID-303 - Excessive Trust in Offboard Management/IDE Software TID-304 - Manipulate Runtime Environment TID-305 - Program Executes Dangerous System Calls TID-306 - Sandboxed Environments Escaped TID-307 - Device Code Representations Inconsistent TID-308 - Code Overwritten to Avoid Detection TID-309 - Device Exploits Engineering Workstation TID-310 - Remotely Accessible Unauthenticated Services TID-328 - Hardcoded Credentials TID-311 - Default Credentials TID-312 - Credential Change Mechanism Can Be Abused TID-313 - Unauthenticated Session Changes Credential TID-314 - Passwords Can Be Guessed Using Brute-Force Attempts TID-315 - Password Retrieval Mechanism Abused TID-316 - Incorrect Certificate Verification Allows Authentication Bypass TID-317 - Predictable Cryptographic Key TID-318 - Insecure Cryptographic Implementation TID-319 - Cross Site Scripting (XSS) TID-320 - SQL Injection TID-321 - HTTP Application Session Hijacking TID-322 - Cross Site Request Forgery (CSRF) TID-323 - HTTP Path Traversal TID-324 - HTTP Direct Object Reference TID-325 - HTTP Injection/Response Splitting TID-326 - Insecure Deserialization TID-327 - Out of Bounds Memory Access TID-329 - Improper Password Storage TID-330 - Cryptographic Timing Side-Channel" }, { "title": "Networking", "url": "/threats/networking.html", "categories": "", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "Networking TID-401 - Undocumented Protocol Features TID-404 - Remotely Triggerable Deadlock/DoS TID-405 - Network Stack Resource Exhaustion TID-406 - Unauthorized Messages or Connections TID-4...", "content": "Networking TID-401 - Undocumented Protocol Features TID-404 - Remotely Triggerable Deadlock/DoS TID-405 - Network Stack Resource Exhaustion TID-406 - Unauthorized Messages or Connections TID-407 - Missing Message Replay Protection TID-408 - Unencrypted Sensitive Data Communication TID-410 - Cryptographic Protocol Side Channel TID-411 - Weak/Insecure Cryptographic Protocol TID-412 - Network Routing Capability Abuse" } , { "title": "TID-101", "url": "/threats/TID-101.html", "categories": "Hardware", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-101: Power Consumption Analysis Side ChannelThreat DescriptionDevices will oftentimes consume variable amounts of power depending on the operations the device is performing. Power consumption a...", "content": "TID-101: Power Consumption Analysis Side ChannelThreat DescriptionDevices will oftentimes consume variable amounts of power depending on the operations the device is performing. Power consumption analysis involves the reading and analyzing of power usage of a device.If a device is vulnerable to a power consumption analysis attack, it may be possible to extract or deduce information about the operating state of the device. This can include extracting secrets/keys, discovering operations conducted on sections of memory, and device control flow. A threat actor can therefore physically monitor the power consumption of a device during an execution of a cryptographic operation to create a trace of its power usage over time. By leveraging the understanding of the operations of common cryptographic properties, the power usage traces can be used to infer various information, such as the cryptographic keys.Threat Maturity and EvidenceProof of ConceptDifferential power analysis (DPA) and correlation power analysis (CPA) on Arduino Uno Researchers “demonstrate that both DPA and CPA techniques are viable in deducing the full 16-byte key of AES-128 by monitoring the power consumption of an Arduino Uno which implements the AddRoundKey and SubBytes steps in round 1 of AES.”CWECWE-1300: Improper Protection of Physical Side Channels (Base) “The device does not contain sufficient protection mechanisms to prevent physical side channels from exposing sensitive information due to patterns in physically observable phenomena such as variations in power consumption, electromagnetic emissions (EME), or acoustic emissions.”CWE-1255: Comparison Logic is Vulnerable to Power Side-Channel Attacks (Variant) “A device’s real time power consumption may be monitored during security token evaluation and the information gleaned may be used to determine the value of the reference token.”CVE" }, { "title": "TID-102", "url": "/threats/TID-102.html", "categories": "Hardware", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-102: Electromagnetic Analysis Side ChannelThreat DescriptionDevices will oftentimes emit different electromagnetic signals during different operations. Electromagnetic analysis involves the col...", "content": "TID-102: Electromagnetic Analysis Side ChannelThreat DescriptionDevices will oftentimes emit different electromagnetic signals during different operations. Electromagnetic analysis involves the collection and analysis of these signals.If devices are vulnerable to electromagnetic analysis attacks, it may be possible for attackers with physical device presence to extract secrets, such as encryption keys, by analyzing the electromagnetic radiation that is emitted by the device. By analyzing these frequencies and comparing them against one another, it may be possible to derive information about device data or operations.Threat Maturity and EvidenceProof of ConceptDifferential Electromagnetic Analysis (DEMA) on FPGA Researchers demonstrated “that DEMA can be performed against hardware implementation of AES using an FPGA.”CWECWE-1300: Improper Protection of Physical Side Channels (Base) “The device does not contain sufficient protection mechanisms to prevent physical side channels from exposing sensitive information due to patterns in physically observable phenomena such as variations in power consumption, electromagnetic emissions (EME), or acoustic emissions.”CVE" }, { "title": "TID-103", "url": "/threats/TID-103.html", "categories": "Hardware", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-103: Cache Timing Analysis Side ChannelThreat DescriptionCache-based timing analysis attacks exploit variations in timing used for memory access, across both cached and uncached memory, to infe...", "content": "TID-103: Cache Timing Analysis Side ChannelThreat DescriptionCache-based timing analysis attacks exploit variations in timing used for memory access, across both cached and uncached memory, to infer the contents of memory. This bypasses existing OS privilege mechanisms.If a threat actor capable of executing arbitrary code on the device, they may be able to use a cache-based side-channel attack to extract data and sensitive information from more privileged processes or areas of memory on a device (e.g., passwords, keys). Executing a cache-based attack assumes the threat actor can deploy custom software to the device (including scripts).Threat Maturity and EvidenceKnown Exploitable WeaknessSpectre and Meltdown Cache Timing Cache Timing was used to create micro-architecture side-channels in devices to read whether data was in the cache or not for the Spectre/Meltdown based-attacks. Through this side-channel data leak, it would be possible to dump entire sections of program memory in the case of Spectre/Meltdown, and kernel memory in the case of Meltdown. Both Spectre and Meltdown have been observed in the wild.CWECVECVE-2017-5754 (Meltdown) “Systems with microprocessors utilizing speculative execution and indirect branch prediction may allow unauthorized disclosure of information to an attacker with local user access via a side-channel analysis of the data cache.”CVE-2017-5753 (Spectre) “Systems with microprocessors utilizing speculative execution and branch prediction may allow unauthorized disclosure of information to an attacker with local user access via a side-channel analysis.”" }, { "title": "TID-105", "url": "/threats/TID-105.html", "categories": "Hardware", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-105: Hardware Fault Injection – Control Flow ModificationThreat DescriptionA threat actor with physical access to a device may be able to manipulate the processor’s intended code execution by s...", "content": "TID-105: Hardware Fault Injection – Control Flow ModificationThreat DescriptionA threat actor with physical access to a device may be able to manipulate the processor’s intended code execution by subjecting it to hardware faults or “glitching”. Hardware faults can be induced by various methods, including voltage fault injection (power glitching), electromagnetic pulses (EM glitching), and optical fault injection. Glitching can be used to bypass various security protections on a device, such as skipping a firmware integrity check during a secure boot process or protections against firmware or data read-out from the device. This threat requires physical access to the device to perform the glitching, and also typically requires substantial iterative testing to identify the precise nature, magnitude, and timing of signals that need to be injected to cause the glitch condition.Threat Maturity and EvidenceKnown Exploitable WeaknessGlitching the Switch In pursuit of extracting the 1st stage boot ROM code from the Nvidia Tegra X1 SoC, the researchers implemented a power glitching attack against the processor to prevent the bootloader from enabling the SoC’s readout protection for that code segment. The glitch interrupts the boot ROM code from writing to a security configuration register, leaving the processor in a state that allows exporting the code responsible for the establishing the processor’s root of trust for secure boot. Analysis of the bootloader code yielded an exploitable buffer overflow in a USB protocol implementation (see TID-327) used to inject code that bypasses secure boot and allows executing unauthorized firmware. The presence of this flaw in the unmodifiable initial boot ROM prevents patching this vulnerability in already deployed devices (see TID-220).Proof of ConceptElectromagnetic Fault Injection: Towards a Fault Model on a 32-bit Microcontroller “These experiments confirm the fact that an attacker could change an instruction into another one and change the value of a piece of data loaded from the Flash memory. But they also provide a more accurate fault model, in which some instructions or registers seem to be more vulnerable than others”Oops..! I Glitched It Again! How to Multi-Glitch the Glitching-Protections on ARM TrustZone-M “In this paper, we present μ-Glitch, the first Voltage Fault Injection (VFI) platform which is capable of injecting multiple, coordinated voltage faults into a target device, requiring only a single trigger signal…We evaluate and showcase the effectiveness and practicality of our attack platform on four real-world chips, featuring TrustZone-M”CWECWE-1247: Improper Protection Against Voltage and Clock Glitches (Base) “The device does not contain or contains incorrectly implemented circuitry or sensors to detect and mitigate voltage and clock glitches and protect sensitive information or software contained on the device.”CWE-1319: Improper Protection against Electromagnetic Fault Injection (EM-FI) (Base) “The device is susceptible to electromagnetic fault injection attacks, causing device internal information to be compromised or security mechanisms to be bypassed.”CVE" }, { "title": "TID-106", "url": "/threats/TID-106.html", "categories": "Hardware", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-106: Data Bus InterceptionThreat DescriptionA threat actor could intercept data across a data bus used to connect a process to either volatile memory or non-volatile storage (e.g. ROM, NVRAM, d...", "content": "TID-106: Data Bus InterceptionThreat DescriptionA threat actor could intercept data across a data bus used to connect a process to either volatile memory or non-volatile storage (e.g. ROM, NVRAM, disk). Depending on the scope of the interception, it may be possible to read and/or perform an adversary-in-the-middle (AITM) attack to write information going over the bus, especially if it lacks adequate encryption and authentication. For example, if a device has discrete RAM external from the processor, it may be possible to tap the address and data lines to observe and capture memory contents as they are loaded and stored for processing. Similar attacks can also be performed in software. Captured data may leak sensitive information (e.g., keys, cleartext firmware code) that can aid in reverse engineering or executing other stages of an attack. Interception and modification may enable an adversary to alter a device’s behavior, achieve persistence, evade detection, or other objectives.NOTE: This is different from TID-114 in that this threat refers to data moving between the processor and storage devices, whereas TID-114 refers to the data moving between the main board or processing chip to a peripheral device.Threat Maturity and EvidenceProof of ConceptAn Off-Chip Attack on Hardware Enclaves via the Memory Bus “This paper shows how an attacker can break the confidentiality of a hardware enclave with MEMBUSTER, an off-chip attack based on snooping the memory bus. An attacker with physical access can observe an unencrypted address bus and extract fine-grained memory access patterns of the victim”CWECWE-311: Missing Encryption of Sensitive Data (Class) “The product does not encrypt sensitive or critical information before storage or transmission.”CWE-319: Cleartext Transmission of Sensitive Information (Base) “The product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.”CVE" }, { "title": "TID-107", "url": "/threats/TID-107.html", "categories": "Hardware", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-107: Unauthorized Direct Memory Access (DMA)Threat DescriptionIf separate discrete chips/peripherals that have access to the same physical memory, a threat actor with access to one peripheral c...", "content": "TID-107: Unauthorized Direct Memory Access (DMA)Threat DescriptionIf separate discrete chips/peripherals that have access to the same physical memory, a threat actor with access to one peripheral could perform a Direct Memory Access (DMA) attack to maliciously read/write memory from a connected chip or peripheral. This threat is especially relevant if there is insufficient hardware or software restrictions on what memory can be accessed/manipulated. A DMA attack can be used to extract cryptographic keys or other sensitive data, and also to manipulate the operation of the chip.Threat Maturity and EvidenceProof of ConceptHigh-Speed DMA Attacks Bypass Built-in Hardware Protections on Enterprise Devices “Eclypsium’s latest research shows that enterprise laptops, servers, and cloud environments continue to be vulnerable to powerful Direct Memory Access (DMA) attacks, even in the presence of protections such as UEFI Secure Boot, Intel Boot Guard, HP Sure Start, and Microsoft Virtualization-Based Security.”Exploiting an I/OMMU vulnerability In the 2010 5th International Conference on Malicious and Unwanted Software, researchers demonstrated how vulnerabilities on Intel’s VT-d could be exploited via a DMA attack.Thunderspy “The attack involved opening the device’s back cover, connecting a hacking device called a Bus Pirate to the SPI flash interface associated with the Thunderbolt controller firmware, connecting the Bus Pirate to the attacker’s laptop, copying the Thunderbolt firmware using a tool called Flashrom, modifying the Thunderbolt firmware to disable all Thunderbolt security, and writing it back to the targeted device. The attacker then connects a Thunderbolt-based direct memory access (DMA) attack device running PCILeech to the targeted PC, and uses it to load a kernel module that allows them to bypass the Windows login screen.”CWECWE-1260: Improper Handling of Overlap Between Protected Memory Ranges (Base) “The product allows address regions to overlap, which can result in the bypassing of intended memory protection.”CWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer “The product performs operations on a memory buffer, but it can read from or write to a memory location that is outside of the intended boundary of the buffer.”CWE-284: Improper Access Control “The product does not restrict or incorrectly restricts access to a resource from an unauthorized actor.”CVE" }, { "title": "TID-108", "url": "/threats/TID-108.html", "categories": "Hardware", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-108: ROM/NVRAM Data Extraction or ModificationThreat DescriptionContents of non-volatile memory chips or non-fixed storage (e.g., SD cards, Compact Flash, hard disks, USB sticks) can be directl...", "content": "TID-108: ROM/NVRAM Data Extraction or ModificationThreat DescriptionContents of non-volatile memory chips or non-fixed storage (e.g., SD cards, Compact Flash, hard disks, USB sticks) can be directly read out for examination or modification by a chip reader. In some cases this may be possible without removing the chip from the circuit board, but most often this will involve physically desoldering the chip and non-destructively removing it from the device. By reading information from ROM or NVRAM, a threat actor would be able to extract any secrets stored on it.If the extracted storage contents contain unencrypted firmware (even partial), this can ease reverse engineering by an adversary to identify other potential vulnerabilities or security-relevant data (e.g., passwords, cryptographic keys).Threat actors may also be able to load malicious changes to the ROM/NVRAM, potentially giving them increased and unauthorized access to the device.Threat Maturity and EvidenceProof of ConceptUprooting Trust: Learnings from an Unpatchable Hardware Root-of-Trust Vulnerability in Siemens S7-1500 PLCs “This Siemens S7-1500 uses two non-volatile NAND flash memories as primary storage for the main SoC. We identified these two non-volatile NAND flash memory chips as W29N01HV (1G-bit) NAND Flash memory [35]. We desoldered the two NAND chips from the device’s PCB and used the Xgecu Minipro TL866II [36] NAND programmer to extract the content of them.”CWECWE-311: Missing Encryption of Sensitive Data “The product does not encrypt sensitive or critical information before storage or transmission.”CWE-312: Cleartext Storage of Sensitive Information “The product stores sensitive information in cleartext within a resource that might be accessible to another control sphere.”CWE-1282: Assumed-Immutable Data is Stored in Writable Memory “Immutable data, such as a first-stage bootloader, device identifiers, and “write-once” configuration settings are stored in writable memory that can be re-programmed or updated in the field.”CVE" }, { "title": "TID-109", "url": "/threats/TID-109.html", "categories": "Hardware", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-109: RAM Chip Contents ReadoutThreat DescriptionIf a threat actor can physically access a RAM chip, they may be able to readout the contents of the chip. Multiple techniques can be used to extr...", "content": "TID-109: RAM Chip Contents ReadoutThreat DescriptionIf a threat actor can physically access a RAM chip, they may be able to readout the contents of the chip. Multiple techniques can be used to extract the contents of RAM, including both runtime and physical access, such as the threat actor can use a Cold-boot attack to physically cool the RAM to minimize the decay of the electrical charge and then physically copy the contents of that RAMThrough these methods, critical data, including firmware or secrets (such as passwords and cryptographic keys), may therefore be vulnerable to extraction. Extraction of this information could then lead to reverse engineering to identify vulnerabilities, abusing secrets to gain unauthorized access, or subverting at-rest encryption schemes.Threat Maturity and EvidenceProof of ConceptCold Boot Attacks “We provide an independent study based on 12 computer systems with different hardware configurations that verifies the empirical practicability of cold boot attacks against DDR1 and DDR2”Cryo-Mechanical RAM Content Extraction Against Modern Embedded Systems CWECWE-311: Missing Encryption of Sensitive Data “The product does not encrypt sensitive or critical information before storage or transmission.”CWE-1384: Improper Handling of Physical or Environmental Conditions“Hardware products are typically only guaranteed to behave correctly within certain physical limits or environmental conditions. Such products cannot necessarily control the physical or external conditions to which they are subjected. However, the inability to handle such conditions can undermine a product’s security. For example, an unexpected physical or environmental condition may cause the flipping of a bit that is used for an authentication decision. This unexpected condition could occur naturally or be induced artificially by an adversary.”CVE" }, { "title": "TID-110", "url": "/threats/TID-110.html", "categories": "Hardware", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-110: Hardware Fault Injection – Data ManipulationThreat DescriptionIf a device uses certain types of vulnerable dynamic random access memory (DRAM), a threat actor with malicious software insta...", "content": "TID-110: Hardware Fault Injection – Data ManipulationThreat DescriptionIf a device uses certain types of vulnerable dynamic random access memory (DRAM), a threat actor with malicious software installed on the device may be manipulate the contents of memory by repeatedly accessing physically nearby memory cells.An example of this is Rowhammer, where a threat actor can deploy code (including written in JavaScript loaded from a web site) that performs many repeated memory access attempts. This repeated access causes a leakage of electric charge within memory, leading to a manipulation of the charge of nearby memory locations. This charge manipulation results in a manipulation of the contents of memory itself. By manipulating the contents of memory, the threat actor may be able to escalate privileges on a device or otherwise bypass security controls.Threat Maturity and EvidenceProof of ConceptRowHammer In 2014 and thereafter, researchers demonstrated the ability to corrupt data in nearby DDR3 and DDR4 DRAM rows by repeatedly accessing data from the same row. It is possible to turn this phenomenon into exploits through various means.CWECWE-1256: Improper Restriction of Software Interfaces to Hardware Interfaces “The product provides software-controllable device functionality for capabilities such as power and clock management, but it does not properly limit functionality that can lead to modification of hardware memory or register bits, or the ability to observe physical side channels.”CVE" }, { "title": "TID-111", "url": "/threats/TID-111.html", "categories": "Hardware", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-111: Untrusted External StorageThreat DescriptionAn untrusted storage peripheral (e.g., USB) could be installed on the device. If malicious code is executed from the untrusted storage, or trans...", "content": "TID-111: Untrusted External StorageThreat DescriptionAn untrusted storage peripheral (e.g., USB) could be installed on the device. If malicious code is executed from the untrusted storage, or transferred to the device, it could provide a way for a threat actor to get unauthorized code to execute on the device. Further, any files transferred from the untrusted storage could potentially be used to modify critical device configurations or settings files.Threat Maturity and EvidenceProof of ConceptBadUSB “The malware they created, called BadUSB, can be installed on a USB device to completely take over a PC, invisibly alter files installed from the memory stick, or even redirect the user’s internet traffic. …Because BadUSB resides not in the flash memory storage of USB devices, but in the firmware that controls their basic functions, the attack code can remain hidden long after the contents of the device’s memory would appear to the average user to be deleted.”CWECWE-1299: Missing Protection Mechanism for Alternate Hardware Interface (Base) “The lack of protections on alternate paths to access control-protected assets (such as unprotected shadow registers and other external facing unguarded interfaces) allows an attacker to bypass existing protections to the asset that are only performed against the primary path.”CVE" }, { "title": "TID-113", "url": "/threats/TID-113.html", "categories": "Hardware", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-113: Unverified Peripheral Firmware LoadedThreat DescriptionA threat actor could manipulate the firmware associated with a peripheral prior to it being loaded and executed. The attackers may be...", "content": "TID-113: Unverified Peripheral Firmware LoadedThreat DescriptionA threat actor could manipulate the firmware associated with a peripheral prior to it being loaded and executed. The attackers may be able to manipulate actions on the device by sending it commands that were not the original intention of the user or by manipulating a bitstream before it is loaded, There are multiple possible cases where this could occur, including:Case 1: Peripheral firmware is stored in a dedicated ROM/NVRAM chip. An adversary with physical access to the device might alter the contents of the peripheral firmware storage to alter peripheral behavior.Case 2: Peripheral firmware stored as a file in the parent processor’s context. An adversary able to execute code in the parent processor context could replace or alter the firmware image before it is loaded into the peripheral during bootup or other initialization process.Case 3: The parent processor’s context has privileged access to peripherals and malicious code running there could alter peripheral firmware dynamically (e.g., through shared memory).Threat Maturity and EvidenceObserved Adversary BehaviorEQUATION GROUP: QUESTIONS AND ANSWERS “Although the implementation of their malware systems is incredibly complex, surpassing even Regin in sophistication, there is one aspect of the EQUATION group’s attack technologies that exceeds anything we have ever seen before. This is the ability to infect the hard drive firmware… The plugin supports two main functions: reprogramming the HDD firmware with a custom payload from the EQUATION group, and providing an API into a set of hidden sectors (or data storage) of the hard drive. This achieves several important things: Extreme persistence that survives disk formatting and OS reinstall. an invisible, persistent storage hidden inside the hard drive.”Proof of ConceptPERILOUS PERIPHERALS: THE HIDDEN DANGERS INSIDE WINDOWS &amp; LINUX COMPUTERS “In new research, Eclypsium found unsigned firmware in WiFi adapters, USB hubs, trackpads, and cameras used in computers from Lenovo, Dell, HP and other major manufacturers. We then demonstrated a successful attack on a server via a network interface card with unsigned firmware used by each of the big three server manufacturers.”CWECWE-1299: Missing Protection Mechanism for Alternate Hardware Interface (Base) “The lack of protections on alternate paths to access control-protected assets (such as unprotected shadow registers and other external facing unguarded interfaces) allows an attacker to bypass existing protections to the asset that are only performed against the primary path.”CWE-1316: Fabric-Address Map Allows Programming of Unwarranted Overlaps of Protected and Unprotected Ranges (Base) “The address map of the on-chip fabric has protected and unprotected regions overlapping, allowing an attacker to bypass access control to the overlapping portion of the protected region.”CVE" }, { "title": "TID-114", "url": "/threats/TID-114.html", "categories": "Hardware", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-114: Peripheral Data Bus InterceptionThreat DescriptionMessages and data passing between discrete sub-components and peripherals may be intercepted and/or modified from through the peripheral b...", "content": "TID-114: Peripheral Data Bus InterceptionThreat DescriptionMessages and data passing between discrete sub-components and peripherals may be intercepted and/or modified from through the peripheral bus (e.g., SPI, I2C, ISA, PCI, USB). Captured data may leak sensitive information (e.g., keys, cleartext firmware code) that can aid in reverse engineering and extracting data needed for other stages of an attack. Additionally, threat actors may be able to alter sensitive information in transit to cause malicious effects through data manipulation or interaction in transit over the bus.NOTE: This is different from TID-106 in that this threat refers to the data moving between the main board or processing chip to a peripheral device, whereas TID-106 refers to data moving between the processor and storage devices.Threat Maturity and EvidenceProof of ConceptToward a hardware man-in-the-middle attack on PCIe bus “In this paper, we present a new attack vector on PCIe based on a hardware Man-in-the-Middle. This system allows real-time data analysis, data-replay, and a copy technique inspired by the shadow-copy principle. Through this one, it is possible to locate, duplicate, and replay sensitive data.”Critical Architectural Vulnerabilities in Siemens SIMATIC S7-1500 Series Allow for Bypass of All Protected Boot Features “An attacker with physical access to the device can either attach to the I2C communication bus or extract the physical ATECC chip from the PLC’s PCB to falsely authenticate and use it as an oracle to generate firmware decryption material. “CWECWE-311: Missing Encryption of Sensitive Data “The product does not encrypt sensitive or critical information before storage or transmission.”CWE-319: Cleartext Transmission of Sensitive Information “The product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.”CVE" }, { "title": "TID-115", "url": "/threats/TID-115.html", "categories": "Hardware", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-115: Firmware/Data Extraction via Hardware InterfaceThreat DescriptionUnprotected programming or debugging interfaces may be used to extract device firmware, exposing it to reverse engineering ...", "content": "TID-115: Firmware/Data Extraction via Hardware InterfaceThreat DescriptionUnprotected programming or debugging interfaces may be used to extract device firmware, exposing it to reverse engineering that may reveal proprietary information, other exploitable vulnerabilities, or security-sensitive data stored in the firmware (such as keys and passwords). Examples include the Joint Test Action Group (JTAG) interface.Threat Maturity and EvidenceProof of ConceptExtracting firmware from devices using JTAG Researcher Sergio Prado demonstrates in this article how to use the JTAG interface to extract firmware from a device.CWECWE-1299: Missing Protection Mechanism for Alternate Hardware Interface “The lack of protections on alternate paths to access control-protected assets (such as unprotected shadow registers and other external facing unguarded interfaces) allows an attacker to bypass existing protections to the asset that are only performed against the primary path.”CWE-1191: On-Chip Debug and Test Interface With Improper Access Control “The chip does not implement or does not correctly perform access control to check whether users are authorized to access internal registers and test modes through the physical debug/test interface.”CVE" }, { "title": "TID-116", "url": "/threats/TID-116.html", "categories": "Hardware", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-116: Latent Privileged Access PortThreat DescriptionIf a device has a latent user access port, it may be possible for attackers to leverage physical access to obtain privileges that were not ac...", "content": "TID-116: Latent Privileged Access PortThreat DescriptionIf a device has a latent user access port, it may be possible for attackers to leverage physical access to obtain privileges that were not accounted for when considering software or remote access controls.Threat Maturity and EvidenceProof of ConceptHow to Hack Hardware using UART - Black Hills Researchers from Black Hills demonstrate how to gain root access to a device through shell access granted and transmitted over UART.IoT Devices - The Not-So-Hidden Risk of UART Interface Satish S demonstrates how to gain root access to a device over a UART interface.CWECWE-1299: Missing Protection Mechanism for Alternate Hardware Interface “The lack of protections on alternate paths to access control-protected assets (such as unprotected shadow registers and other external facing unguarded interfaces) allows an attacker to bypass existing protections to the asset that are only performed against the primary path.”CWE-1191: On-Chip Debug and Test Interface With Improper Access Control “The chip does not implement or does not correctly perform access control to check whether users are authorized to access internal registers and test modes through the physical debug/test interface.”CVECVE-2022-29402 “TP-Link TL-WR840N EU v6.20 was discovered to contain insecure protections for its UART console. This vulnerability allows attackers to connect to the UART port via a serial connection and execute commands as the root user without authentication.”" }, { "title": "TID-118", "url": "/threats/TID-118.html", "categories": "Hardware", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-118: Weak Peripheral Port Electrical Damage ProtectionThreat DescriptionIf a threat actor has physical access to a device, they may be able to cause physical damage to the circuit board of a de...", "content": "TID-118: Weak Peripheral Port Electrical Damage ProtectionThreat DescriptionIf a threat actor has physical access to a device, they may be able to cause physical damage to the circuit board of a device, in some cases even destroying the device. A malicious actor may short circuit or introduce out-of-spec voltages and currents to pins on external connectors. This can lead to effects as mild as interrupting device functionality, by causing crashes or reboots, or as significant as corrupting data, corrupting firmware, or permanent hardware damage. Depending on how robust the hardware design is, physical damage may be limited to a single affected peripheral port or as extensive as destroying the entire device.Threat Maturity and EvidenceKnown Exploitable WeaknessUSBKILL “The USBKill is a device that stress tests hardware. When plugged in power is taken from a USB-Port, multiplied, and discharged into the data-lines, typically disabling an unprotected device.”CWECWE-1384: Improper Handling of Physical or Environmental Conditions “The product does not properly handle unexpected physical or environmental conditions that occur naturally or are artificially induced.”CVE" }, { "title": "TID-119", "url": "/threats/TID-119.html", "categories": "Hardware", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-119: Latent Hardware Debug Port Allows Memory/Code ManipulationThreat DescriptionHardware debugging ports (e.g., JTAG) oftentimes have high privileges or direct access to the running device’s m...", "content": "TID-119: Latent Hardware Debug Port Allows Memory/Code ManipulationThreat DescriptionHardware debugging ports (e.g., JTAG) oftentimes have high privileges or direct access to the running device’s memory and integrated hardware. By leveraging one of these hardware debugging ports, an adversary may be able to read memory values off of the device, change the value of a section of memory during runtime, or control the execution of code on the processor. This can give threat actors increased privileges on the device or bypass other security protections.Threat Maturity and EvidenceProof of Concepthw-101-jtag (Parts 1, 2 and 3) Researchers at River Loop Security demonstrate here how to manipulate and read memory from a JTAG port.CWECWE-1191: On-Chip Debug and Test Interface With Improper Access Control “The chip does not implement or does not correctly perform access control to check whether users are authorized to access internal registers and test modes through the physical debug/test interface.”CVE" }, { "title": "TID-201", "url": "/threats/TID-201.html", "categories": "System Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-201: Inadequate Bootloader Protection and VerificationThreat DescriptionSome devices utilize bootloaders that are either stored in writable memory or memory that can be made writable. It may th...", "content": "TID-201: Inadequate Bootloader Protection and VerificationThreat DescriptionSome devices utilize bootloaders that are either stored in writable memory or memory that can be made writable. It may then be possible for a threat actor to alter the contents of the device’s designated boot code storage locations to inject malicious code or modify the bootloader’s operation. This could allow the installation of a “bootkit”, which is loaded before the operating system and can undermine any security protections within the bootloader or operating system. Typically this is done through a vulnerability or lack of write protections in the bootloader loader/runtime environment.Threat Maturity and EvidenceObserved Adversarial BehaviorATT&amp;CK Technique: Pre-OS Boot: Bootkit (T1542.003) “Adversaries may use bootkits to persist on systems. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.”Detecting UEFI Bootkits in the Wild (Part 1) “As UEFI boot systems are going mainstream, the bootkits are also shifting to an implementation of infecting firmware in a flash chip on the motherboard instead of the MBR/VBR on the hard drive. The first PoC of UEFI bootkits was presented in 2013 and the threats have been observed in the wild since 2018.”LOJAX First UEFI rootkit found in the wild, courtesy of the Sednit group “Sednit also known as APT28, Sofacy, Strontium and Fancy Bear – has been operating since at least 2004, and has made headlines frequently in the past years: it is believed to be behind major, high profile attacks. … this white paper details the first time this group is known to have used a UEFI rootkit.”MosaicRegressor: Lurking in the Shadows of UEFI “During an investigation, we came across several suspicious UEFI firmware images. A deeper inspection revealed that they contained four components that had an unusual proximity in their assigned GUID values, those were two DXE drivers and two UEFI applications. After further analysis we were able to determine that they were based on the leaked source code of HackingTeam’s VectorEDK bootkit, with minor customizations.”TRICKBOT NOW OFFERS ‘TRICKBOOT’: PERSIST, BRICK, PROFIT “This new functionality, which we have dubbed “TrickBoot,” makes use of readily available tools to check devices for well-known vulnerabilities that can allow attackers to read, write, or erase the UEFI/BIOS firmware of a device. “CWECWE-693: Protection Mechanisms Failure (Pillar) “The product does not use or incorrectly uses a protection mechanism that provides sufficient defense against directed attacks against the product.”CWE-284: Improper Access Control “The product does not restrict or incorrectly restricts access to a resource from an unauthorized actor.”CVE" }, { "title": "TID-202", "url": "/threats/TID-202.html", "categories": "System Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-202: Exploitable System Network Stack ComponentThreat DescriptionDevices may have vulnerabilities within software used to parse various network protocols. If the device does not properly parse...", "content": "TID-202: Exploitable System Network Stack ComponentThreat DescriptionDevices may have vulnerabilities within software used to parse various network protocols. If the device does not properly parse a protocol, a threat actor can send improperly formatted messages to the device, which may result in memory corruptions. Vulnerabilities resulting from protocol manipulation can then be used to perform remote code execution or to perform a denial of service attack on the device. There are a number of known complexities with network protocol parsing, including unclear protocol specifications or parsing expectation.Threat Maturity and EvidenceKnown Exploitable WeaknessBroadpwn: Remotely Compromising Android and iOS via a Bug in Broadcom’s Wi-Fi Chipsets “Broadpwn is a fully remote attack against Broadcom’s BCM43xx family of WiFi chipsets, which allows for code execution on the main application processor in both Android and iOS. It is based on an unusually powerful 0-day that allowed us to leverage it into a reliable, fully remote exploit.”Ripple20 “Ripple20 vulnerabilities are unique both in their widespread effect and impact due to supply chain effect and being vulnerabilities allowing attackers to bypass NAT and firewalls and take control of devices undetected, with no user interaction required. This is due to the vulnerabilities being in a low level TCP/IP stack, and the fact that for many of the vulnerabilities, the packets sent are very similar to valid packets, or, in some cases are completely valid packets. This enables the attack to pass as legitimate traffic.”Urgent/11 “The Armis research team, Armis Labs, has discovered 11 zero-day vulnerabilities in VxWorks®, the most widely used operating system you may have never heard about. VxWorks is used by over 2 billion devices including critical industrial, medical and enterprise devices. Dubbed “URGENT/11,” the vulnerabilities reside in VxWorks’ TCP/IP stack (IPnet), impacting all versions since version 6.5, and are a rare example of vulnerabilities found to affect the operating system over the last 13 years. Armis has worked closely with Wind River®, the maintainer of VxWorks, and the latest VxWorks 7 released on July 19 contains fixes for all the discovered vulnerabilities.”AMNESIA:33 “In this study, we discuss the results of the security analysis of seven open source TCP/IP stacks and report a bundle of 33 new vulnerabilities found in four of the seven analyzed stacks that are used by major IoT, OT and IT device vendors”CWECWE-20: Improper Input Validation (Class) “The product receives input or data, but it does not validate or incorrectly validates that the input has the properties that are required to process the data safely and correctly.”CWE-121: Stack-based Buffer Overflow (Simple) “A stack-based buffer overflow condition is a condition on where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).”CVEICSA-13-291-01B “An attacker could cause the software to go into an infinite loop with a specifically crafted TCP packet, causing the process to crash. The system must be restarted manually to clear the condition.”CVE-2013-2811: GE Proficy HMI/SCADA DNP3 Driver Input Validation “The DNP master station server (DNPDrv.exe) that processes incoming messages via Serial, IP, or Modem does not validate all inputs and can be exploited to generate an unhandled exception or denial of service.”CVE-2019-6529: Kunbus PR100088 Modbus Gateway “An attacker could specially craft an FTP request that could crash the device.”CVE-2013-0662: Schneider Electric Serial Modbus Driver Buffer Overflow “The Modbus Serial Driver creates a listener on Port 27700/TCP. When a connection is made, the Modbus Application Header is first read into a buffer. If a large buffer size is specified in this header, a stack-based buffer overflow results. A second overflow problem can then be exploited by overwriting the return address, allowing the attacker to execute arbitrary code with the permission of the user running the software.”" }, { "title": "TID-203", "url": "/threats/TID-203.html", "categories": "System Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-203: Malicious OS Kernel Driver/Module InstallableThreat DescriptionThreat actors may be able to install a driver or kernel module with malicious code to load a rootkit and manipulate the OS. D...", "content": "TID-203: Malicious OS Kernel Driver/Module InstallableThreat DescriptionThreat actors may be able to install a driver or kernel module with malicious code to load a rootkit and manipulate the OS. Drivers and kernel modules generally operate with a high-level privileges (e.g. Ring 0) and therefore can be used to manipulate the operation of the existing OS. OS kernel modules and drivers can typically be installed by any users with root/administrative permissions, though some OSes require that drivers be digitally signed by a trusted OEM before they can be installed on a device.Threat Maturity and EvidenceObserved Adversary BehaviorSyslogk Rootkit “The Syslogk rootkit installed itself as a Linux kernel module where it had the ability to hook functions/syscalls, manipulate and create its own syscalls, and launch a payload that contains a backdoor at the request of remote threat actors.”CWECWE-306 Missing Authentication for Critical Function “The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.”CVE" }, { "title": "TID-204", "url": "/threats/TID-204.html", "categories": "System Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-204: Untrusted Programs Can Access Privileged OS FunctionsThreat DescriptionWithout a correctly enforced operating system privilege model, a compromised or untrusted application program could a...", "content": "TID-204: Untrusted Programs Can Access Privileged OS FunctionsThreat DescriptionWithout a correctly enforced operating system privilege model, a compromised or untrusted application program could access to data, memory, or programs associated with the underlying OS or other applications. This could also be used to further manipulate the underlying OS.Threat Maturity and EvidenceProof of ConceptSecurity Issues In Compiled PLC Logic (CoDeSys &amp; ProConOs) - Reid Wightman (Dragos) (at S4x23) Researcher Reid Wightman demonstrated that it is possible to compromise a given feature of a controller, in this example the network protocol handler, and leverage that to overwrite memory in other critical portions of the CoDeSys and ProConOs runtime environments.CWECWE-693: Protection Mechanisms Failure (Pillar) “The product does not use or incorrectly uses a protection mechanism that provides sufficient defense against directed attacks against the product.”CVE" }, { "title": "TID-205", "url": "/threats/TID-205.html", "categories": "System Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-205: Existing OS Tools Maliciously Used for Device ManipulationThreat DescriptionIf a threat actor has access to a valid OS account, they can utilize existing OS tools and system calls to insta...", "content": "TID-205: Existing OS Tools Maliciously Used for Device ManipulationThreat DescriptionIf a threat actor has access to a valid OS account, they can utilize existing OS tools and system calls to install malicious code or manipulate device operations. If the account and privileges are not sufficiently restricted, the threat actor may be able to add their own tools, modify other application layer programs, or even execute commands with elevated privileges (e.g., setuid/setgid). Further, threat actors can perform a living-off-the-land attack, where they choose to only use pre-installed functionality and install nothing else on the device. These types of attacks can be hard to detect because malicious behavior may be implemented using tools and functions with legitimate purposes.Threat Maturity and EvidenceObserved Adversarial BehaviorATT&amp;CK Technique: Graphical User Interface (T0823) Procedure Example: 2015 Ukraine Electric Power Attack (C0028) “During the 2015 Ukraine Electric Power Attack, Sandworm Team utilized HMI GUIs in the SCADA environment to open breakers.”Volt Typhoon targets US critical infrastructure with living-off-the-land techniques “To achieve their objective, the threat actor puts strong emphasis on stealth in this campaign, relying almost exclusively on living-off-the-land techniques and hands-on-keyboard activity. “CWECWE-693: Protection Mechanisms Failure (Pillar) “The product does not use or incorrectly uses a protection mechanism that provides sufficient defense against directed attacks against the product.”CVE" }, { "title": "TID-206", "url": "/threats/TID-206.html", "categories": "System Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-206: Memory Management Protections SubvertedThreat DescriptionWhile the use of memory permissions, such as non-executable stack and heap memory, can prevent threat actors from injecting and exe...", "content": "TID-206: Memory Management Protections SubvertedThreat DescriptionWhile the use of memory permissions, such as non-executable stack and heap memory, can prevent threat actors from injecting and executing malicious code, it is still possible to leverage a process’s existing code to perform a malicious function. For example, Return Oriented Programming (ROP) is a technique used by threat actors where once a process’s stack can be overwritten, a series of “returns” to portions of code within the process can be leveraged to cause an intended malicious function. This can include “returns” to existing libraries (e.g., libc), or other instruction sequences already in memory of that process.The exploitation of this threat may be possible through TID-219, and may also be enabled by the exploitation of TID-219.Threat Maturity and EvidenceKnown Exploitable WeaknessATT&amp;CK Technique: Process Injection: Proc Memory (T1055.09) “Proc memory injection involves enumerating the memory of a process via the /proc filesystem (/proc/[pid]) then crafting a return-oriented programming (ROP) payload with available gadgets/instructions.”CWECVECVE-2024-28115 “FreeRTOS is a real-time operating system for microcontrollers. FreeRTOS Kernel versions through 10.6.1 do not sufficiently protect against local privilege escalation via Return Oriented Programming techniques should a vulnerability exist that allows code injection and execution. These issues affect ARMv7-M MPU ports, and ARMv8-M ports with Memory Protected Unit (MPU) support enabled (i.e. configENABLE_MPU set to 1). These issues are fixed in version 10.6.2 with a new MPU wrapper.”" }, { "title": "TID-207", "url": "/threats/TID-207.html", "categories": "System Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-207: Container EscapeThreat DescriptionContainer environments, such as Docker and Kubernetes, share the same underlying kernel as the host operating system. Therefore, a kernel or container vul...", "content": "TID-207: Container EscapeThreat DescriptionContainer environments, such as Docker and Kubernetes, share the same underlying kernel as the host operating system. Therefore, a kernel or container vulnerability that allows the execution of unauthorized code could be used to escape the container. Further, container environments with incorrect configurations or excessive privileges could also allow a container escape. By escaping the container, the threat actor could manipulate the underlying OS or applications/data within other containers hosted on that device.Threat Maturity and EvidenceKnown Exploitable WeaknessATT&amp;CK Technique: Escape to Host (T1611) “Adversaries may break out of a container to gain access to the underlying host. This can allow an adversary access to other containerized resources from the host level or to the host itself. In principle, containerized resources should provide a clear separation of application functionality and be isolated from the host environment.”Proof of ConceptBreaking out of Docker via runC – Explaining CVE-2019-5736 “A vulnerability in runc allows a malicious container to overwrite the host runc binary and thus gain root-level code execution on the host. The level of user interaction is being able to run any command… as root within a container in two possible contexts.”Crowdstrike: CVE-2022-0185: Kubernetes Container Escape Using Linux Kernel Exploit “On Jan. 18, 2022, researchers found a heap base buffer overflow flaw (CVE-2022-0185) in the Linux kernel (5.1-rc1+) function “legacy_parse_param” of filesystem context functionality, which allows an out-of-bounds write in kernel memory. Using this primitive, an unprivileged attacker can escalate its privilege to root, bypassing any Linux namespace restrictions.” Threat actors can then leverage this namespace restriction bypass and root level privilege to break out of the Kubernetes container.CWECVECVE-2019-5736 “runc through 1.0-rc6, as used in Docker before 18.09.2 and other products, allows attackers to overwrite the host runc binary (and consequently obtain host root access) by leveraging the ability to execute a command as root within one of these types of containers: (1) a new container with an attacker-controlled image, or (2) an existing container, to which the attacker previously had write access, that can be attached with docker exec. This occurs because of file-descriptor mishandling, related to /proc/self/exe.”CVE-2022-0185 “A heap-based buffer overflow flaw was found in the way the legacy_parse_param function in the Filesystem Context functionality of the Linux kernel verified the supplied parameters length. An unprivileged (in case of unprivileged user namespaces enabled, otherwise needs namespace CAP_SYS_ADMIN privilege) local user able to open a filesystem that does not support the Filesystem Context API (and thus fallbacks to legacy handling) could use this flaw to escalate their privileges on the system.”" }, { "title": "TID-208", "url": "/threats/TID-208.html", "categories": "System Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-208: Virtual Machine EscapeThreat DescriptionVirtualized environments will oftentimes share the same underlying hardware as the hypervisor. A hypervisor or virtualized environment vulnerability...", "content": "TID-208: Virtual Machine EscapeThreat DescriptionVirtualized environments will oftentimes share the same underlying hardware as the hypervisor. A hypervisor or virtualized environment vulnerability that allows the execution of unauthorized code could be used to escape the virtualized environments. By escaping the environment, a threat actor could manipulate the underlying hypervisor, operating system, or application/data within other environments hosted on that device.Threat Maturity and EvidenceKnown Exploitable WeaknessVMWare Security Advisory (VMSA-2024-0006.1) “A malicious actor with local administrative privileges on a virtual machine may exploit this issue to execute code as the virtual machine’s VMX process running on the host. On ESXi, the exploitation is contained within the VMX sandbox whereas, on Workstation and Fusion, this may lead to code execution on the machine where Workstation or Fusion is installed.”“A malicious actor with privileges within the VMX process may trigger an out-of-bounds write leading to an escape of the sandbox.”CWECWE-693: Protection Mechanisms Failure (Pillar) “The product does not use or incorrectly uses a protection mechanism that provides sufficient defense against directed attacks against the product.”CVEImplementing Hypervisor-Specific Mitigations for Microarchitectural Data Sampling (MDS) Vulnerabilities (CVE-2018-12126, CVE-2018-12127, CVE-2018-12130, and CVE-2019-11091) in vSphere (67577) “Intel has disclosed details on a new wave of speculative-execution vulnerabilities known collectively as “Microarchitectural Data Sampling (MDS)” that can occur on Intel microarchitecture prior to 2nd Generation Intel® Xeon® Scalable Processors (formerly known as Cascade Lake). These issues may allow a malicious user who can locally execute code on a system to infer the values of data otherwise protected by architectural mechanisms.”Patch now! VMWare escape flaws are so serious even end-of-life software gets a fix VMware ESXi, Workstation, and Fusion updates address multiple security vulnerabilities (CVE-2024-22252, CVE-2024-22253, CVE-2024-22254, CVE-2024-22255) “VMWare’s decision to offer fixes for end-of-life software is because the vulnerabilities patched in these updates are escape flaws that allow a computer program to breack of the confines of a VM and affect the host operating system. Specifically, an attacker with privileged access, such as root or administrator, on a guest VM can access the hypervisor on the host.”" }, { "title": "TID-209", "url": "/threats/TID-209.html", "categories": "System Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-209: Host Can Manipulate Guest Virtual MachinesThreat DescriptionIf a threat actor can access a hypervisor’s host infrastructure, such as through existing management interfaces, they could use ...", "content": "TID-209: Host Can Manipulate Guest Virtual MachinesThreat DescriptionIf a threat actor can access a hypervisor’s host infrastructure, such as through existing management interfaces, they could use that access to manipulate associated guest/virtualized systems. Since the hypervisor runs underneath the virtual machines, this threat will go undetected by the individual guest environments.Threat Maturity and EvidenceObserved Adversary BehaviorSandworm Disrupts Power in Ukraine Using a Novel Attack Against Operational Technology “Sandworm gained access to the OT environment through a hypervisor that hosted a supervisory control and data acquisition (SCADA) management instance for the victim’s substation environment…On October 10, the actor leveraged an optical disc (ISO) image named “a.iso” to execute a native MicroSCADA binary in a likely attempt to execute malicious control commands to switch off substations.”Bad VIB(E)s Mandiant Discoveries Researchers at Mandiant discovered adversarial usage of malware that runs on VM hosting machines. The malware is able to “1) maintain persistent administrative access to the hypervisor; 2) send commands to the hypervisor that will be routed to the guest VM for execution; 3) transfer files between the ESXi hypervisor and guest machines running beneath it; 4) tamper with logging services on the hypervisor; 5) execute arbitrary commands from one guest VM to another guest VM running on the same hypervisor”VMware ESXi Zero-Day Used by Chinese Espionage Actor to Perform Privileged Guest Operations on Compromised Hypervisors “Exploiting a zero-day vulnerability (CVE-2023-20867) that enabled the execution of privileged commands across Windows, Linux, and PhotonOS (vCenter) guest VMs without authentication of guest credentials from a compromised ESXi host and no default logging on guest VMs”CWECWE-306: Missing Authentication for Critical Function “The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.”CVECVE-2023-20867 “A fully compromised ESXi host can force VMware Tools to fail to authenticate host-to-guest operations, impacting the confidentiality and integrity of the guest virtual machine.”" }, { "title": "TID-210", "url": "/threats/TID-210.html", "categories": "System Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-210: Device Vulnerabilities UnpatchableThreat DescriptionThreat actors will frequently target device components, like firmware, that have already known vulnerabilities instead of expending the ...", "content": "TID-210: Device Vulnerabilities UnpatchableThreat DescriptionThreat actors will frequently target device components, like firmware, that have already known vulnerabilities instead of expending the effort to discover new ones. If a device cannot update its firmware, especially upon the discovery of a vulnerability, threat actors may be able to target these vulnerabilities. This is because a vulnerability that is found once will be exploitable on all devices running that firmware in perpetuity. Threat actors’ ability to achieve their goals will depend on the nature of the unpatched vulnerability.If identified threats cannot be mitigated due to the inability to disable or update vulnerable components, the device will remain vulnerable. This may also be the result of the device reaching its End-of-Service/Support date, where it is no longer being supported by the vendor.Threat Maturity and EvidenceKnown Exploitable WeaknessRegarding Unit 42 New Mirai Variant Targeting Network Security Devices Some of the IoT devices targeted by the Mirai botnet could not be patched because the device had reached the vendor stated End of Service/Support date.CWECWE-1277: Firmware Not Updateable “The product does not provide its users with the ability to update or patch its firmware to address any vulnerabilities or weaknesses that may be present.”CWE-1329: Reliance on Component That is Not Updateable “The product contains a component that cannot be updated or patched in order to remove vulnerabilities or significant bugs.”CVE" }, { "title": "TID-211", "url": "/threats/TID-211.html", "categories": "System Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-211: Device Allows Unauthenticated Firmware InstallationThreat DescriptionIf a device does not have a mechanism to authenticate firmware updates, a threat actor may be able to install malicious...", "content": "TID-211: Device Allows Unauthenticated Firmware InstallationThreat DescriptionIf a device does not have a mechanism to authenticate firmware updates, a threat actor may be able to install malicious or corrupt firmware on the device. In such cases, an adversary may craft a customized or maliciously modified firmware update package that, if properly formed, the device will install it without challenge. The unauthorized firmware could then be used to (i) “brick” the device and prevent it from being reset, (ii) install malicious logic on the device, including to gain persistence, or (iii) enable access to ease reverse engineering the device to identify remotely exploitable vulnerabilities, depending on how the firmware was formed and how the target device responds to it. Devices that perform only error checking of update packages prior to installation (e.g., parity checks, hash checks without a cryptographic signature, etc.) will be susceptible to this threat.This threat also includes any firmware authentication mechanisms that are not enforced on the device. If devices don’t check firmware integrity/download command authenticity on-device, threat actors may be able to falsely attest that their firmware is secure, thereby bypassing firmware integrity checks. One mechanism through which threat actors could perform this action is by taking advantage of a device’s reliance on a separate management device or service to check firmware. Threat actors may be able to spoof the management device firmware check and successfully initiate a malicious firmware download.Threat Maturity and EvidenceObserved Adversary BehaviorEQUATION GROUP: QUESTIONS AND ANSWERS “Although the implementation of their malware systems is incredibly complex, surpassing even Regin in sophistication, there is one aspect of the EQUATION group’s attack technologies that exceeds anything we have ever seen before. This is the ability to infect the hard drive firmware… The plugin supports two main functions: reprogramming the HDD firmware with a custom payload from the EQUATION group, and providing an API into a set of hidden sectors (or data storage) of the hard drive. This achieves several important things: Extreme persistence that survives disk formatting and OS reinstall. an invisible, persistent storage hidden inside the hard drive.”ATT&amp;CK Technique: System Firmware (T0857)Procedure Example: 2015 Ukraine Electric Power Attack (C0028) “During the 2015 Ukraine Electric Power Attack, Sandworm Team overwrote the serial-to-ethernet gateways with custom firmware to make systems either disabled, shutdown, and/or unrecoverable.”Proof of ConceptOn the recent vulnerability in Diebold Nixdorf ATMs Researchers from Positive Technologies were able to demonstrate that it was possible to exploit a vulnerability that allowed them to upload valid firmware without a valid encryption key. From there, attackers or researchers would be able to modify the ATM firmware however they like.CWECWE-306: Missing Authentication for Critical Function “The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.”CVERockwell Automation Micrologix Remote Code Execution - CVE-2015-6492 Researchers at CyberX Threat Intelligence developed custom firmware that allowed them to perform memory dumps. Through these memory dumps, they were able to find memory vulnerabilities that allowed them to develop remote code execution exploits for Rockwell Automatic Micrologix controllers. They were then able to upload malicious firmware to the device." }, { "title": "TID-212", "url": "/threats/TID-212.html", "categories": "System Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-212: FW/SW Update Integrity Shared Secrets ExtractionThreat DescriptionSome devices utilize a shared secret authentication scheme to verify firmware updates. This is an improvement over unauthe...", "content": "TID-212: FW/SW Update Integrity Shared Secrets ExtractionThreat DescriptionSome devices utilize a shared secret authentication scheme to verify firmware updates. This is an improvement over unauthenticated updates (as in TID-211) and can be coupled with or implemented as symmetric key encryption for added confidentiality. This process requires the shared secret to be present on the device for verification (or decryption). Often the same shared secret will be used across many or all examples of that model device, therefore if the secret is compromised on one device it makes all others vulnerable. A threat actor may extract the secret via various means then use it to fabricate a malicious firmware update that is accepted by all devices that use the same integrity mechanism and shared secret.Malicious firmware or software could then be installed to (i) “brick” the device and prevent it from being reset, (ii) install malicious logic on the device, including to gain persistence, or (iii) enable access to ease reverse engineering the device to identify remotely exploitable vulnerabilities on the device.Threat Maturity and EvidenceProof of ConceptSiemens SIMATIC S7-1500 Series Allow for Bypass of All Protected Boot Features “The Siemens S7-1500 series PLCs implement a boot-time firmware validation scheme using a combination of hardware-enabled firmware decryption and binary integrity validation in the Siemens ADONIS operating system. Multiple architectural vulnerabilities exist which allow attackers to bypass all protected boot features, resulting in persistent arbitrary modification of operating code and data. With physical access to a single device, attackers can exploit the vulnerabilities to generate valid AES keys for most of the S7-1500 series firmwares, including the one modified by attackers. The custom-modified firmware can be authenticated and decrypted by the original boot process. By flashing this malicious firmware on a target device, either physically or by exploiting an existing remote code execution vulnerability, attackers could persistently gain arbitrary code execution and potentially circumvent any official security and firmware updates, without the user’s knowledge.”CWECVECVE-2022-38773 “Affected devices do not contain an Immutable Root of Trust in Hardware. With this the integrity of the code executed on the device can not be validated during load-time. An attacker with physical access to the device could use this to replace the boot image of the device and execute arbitrary code.”" }, { "title": "TID-213", "url": "/threats/TID-213.html", "categories": "System Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-213: Faulty FW/SW Update Integrity VerificationThreat DescriptionTo avoid the weaknesses of a shared secret verification (see TID-212), devices may utilize a digital signature verification sche...", "content": "TID-213: Faulty FW/SW Update Integrity VerificationThreat DescriptionTo avoid the weaknesses of a shared secret verification (see TID-212), devices may utilize a digital signature verification scheme based on asymmetric public key cryptography. However, if the device does not correctly verify a firmware/software signature correctly, a threat actor can bypass the device’s authenticity checking mechanisms to upload malicious or corrupt version. The unauthorized firmware could “brick” the device, preventing it from being reset. This could also be used to install malicious logic on the device.NOTE: firmware/software signature here refers to processes that use cryptographic keys to verify firmware integrity and origin. These can include keyed hashes and/or asymmetric key signing. This does not include encrypting firmware with no other integrity verification mechanisms in-place.Threat Maturity and EvidenceKnown Exploitable WeaknessKEV - CVE-2023-41991 “Apple iOS, iPadOS, macOS, and watchOS contain an improper certificate validation vulnerability that can allow a malicious app to bypass signature validation.”CWECWE-347: Improper Verification of Cryptographic Signature “The product does not verify, or incorrectly verifies, the cryptographic signature for data.”CVECVE-2021-43394 “STMicroelectronics STSAFE-J 1.1.4, J-SAFE3 1.2.5, and J-SIGN sometimes allow attackers to abuse signature verification. This is associated with the ECDSA signature algorithm on the Java Card J-SAFE3 and STSAFE-J platforms exposing a 3.0.4 Java Card API…”CVE-2023-33768 “Incorrect signature verification of the firmware during the Device Firmware Update process of Belkin Wemo Smart Plug WSP080 v1.2 allows attackers to cause a Denial of Service (DoS) via a crafted firmware file.”Cisco IOS XE Software Digital Signature Verification Bypass Vulnerability - CVE-2020-3209 “A vulnerability in software image verification in Cisco IOS XE Software could allow an unauthenticated, physical attacker to install and boot a malicious software image or execute unsigned binaries on an affected device.The vulnerability is due to an improper check on the area of code that manages the verification of the digital signatures of system image files during the initial boot process. An attacker could exploit this vulnerability by loading unsigned software on an affected device. A successful exploit could allow the attacker to install and boot a malicious software image or execute unsigned binaries on the targeted device.”CVE-2023-41991 “A certificate validation issue was addressed. This issue is fixed in macOS Ventura 13.6, iOS 16.7 and iPadOS 16.7. A malicious app may be able to bypass signature validation. Apple is aware of a report that this issue may have been actively exploited against versions of iOS before iOS 16.7.”" }, { "title": "TID-214", "url": "/threats/TID-214.html", "categories": "System Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-214: Secrets Extracted from Device Root of TrustThreat DescriptionSome device have mutable or immutable secure Roots of Trust (ROTs) that may store keys or secrets. If the device has a ROT mech...", "content": "TID-214: Secrets Extracted from Device Root of TrustThreat DescriptionSome device have mutable or immutable secure Roots of Trust (ROTs) that may store keys or secrets. If the device has a ROT mechanism to validate the authenticity of the firmware/software, the ROT can be either a software or hardware mechanisms, such as a Trusted Platform Module (TPM), firmware TPM (fTPM), Secure Element, or similar security module. If a threat actor can access authentication material on the ROT, such as the keys or other secrets, they can potentially use them to sign a malicious version of firmware/software which can then be installed on the device.Threat Maturity and EvidenceProof of ConceptUprooting Trust: Learnings from an Unpatchable Hardware Root-of-Trust Vulnerability in Siemens S7-1500 PLCs “Specifically, this assessment is conducted by uncovering novel vulnerabilities related to the discrete RoT implementation on the Siemens S7-1500 series Programmable Logic Controllers (PLCs). Our findings are cautionary evidence of how flawed assumptions related to RoT implementation may allow malicious actors to spoof authentication credentials, re-encrypt firmware, and ultimately gain covert, privileged control over these devices without invasive or destructive practices.”100 Seconds of Solitude: Defeating Cisco Trust Anchor With FPGA Bitstream Shenanigans “A vulnerability in the logic that handles access control to one of the hardware components in Cisco’s proprietary Secure Boot implementation could allow an authenticated, local attacker to write a modified firmware image to the component. This vulnerability affects multiple Cisco products that support hardware-based Secure Boot functionality.”faulTPM: Exposing AMD fTPMs’ Deepest Secrets “In this paper, we show that AMD’s fTPMs are vulnerable to physical attacks against their execution environment: the AMD-SP. Our attack utilizes the AMD-SP’s vulnerability to voltage fault injection attacks to extract a chip-unique secret from the targeted CPU. This secret is subsequently used to derive the storage and integrity keys protecting the fTPM’s non-volatile (NV) data stored on the Basic Input/Output System (BIOS) flash chip.”CWECWE-1326: Missing Immutable Root of Trust in Hardware “A missing immutable root of trust in the hardware results in the ability to bypass secure boot or execute untrusted or adversarial boot code.”CVECVE-2022-38773 “Affected devices do not contain an Immutable Root of Trust in Hardware. With this the integrity of the code executed on the device can not be validated during load-time. An attacker with physical access to the device could use this to replace the boot image of the device and execute arbitrary code.”" }, { "title": "TID-215", "url": "/threats/TID-215.html", "categories": "System Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-215: Unencrypted SW/FW UpdatesThreat DescriptionIf the firmware/software update is not encrypted at rest in storage it can be reverse engineered to identify potential vulnerabilities or extract...", "content": "TID-215: Unencrypted SW/FW UpdatesThreat DescriptionIf the firmware/software update is not encrypted at rest in storage it can be reverse engineered to identify potential vulnerabilities or extract other information needed to protect devices (e.g., passwords, cryptographic keys). Firmware/software updates can often be directly downloaded from the Internet and reverse engineered, however, firmware/software updates that are unencrypted in transit may also be intercepted and analyzed over-the-wire.Threat Maturity and EvidenceProof of Concept Reverse Engineering Obfuscated Firmware for Vulnerability Analysis Nozomi researchers demonstrated how the ability to reverse engineer firmware gives attackers the ability to find novel vulnerabilities, or the presence of older vulnerabilities, on a given device.CWECWE-311: Missing Encryption of Sensitive Data “The product does not encrypt sensitive or critical information before storage or transmission.”CVE" }, { "title": "TID-216", "url": "/threats/TID-216.html", "categories": "System Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-216: Firmware Update Rollbacks AllowedThreat DescriptionFirmware updates will oftentimes include fixes to security vulnerabilities, meaning that past versions will contain security threats to t...", "content": "TID-216: Firmware Update Rollbacks AllowedThreat DescriptionFirmware updates will oftentimes include fixes to security vulnerabilities, meaning that past versions will contain security threats to the devices. If a threat actor can initiate a firmware update on the device, they may be able to “upgrade” to a previous firmware version with known vulnerabilities. By completing an “upgrade” to a version with vulnerabilities, the threat actor could then potentially exploit that device to gain additional access or privileges.Threat Maturity and EvidenceKnown Exploitable WeaknessChina APT Cracks Cisco Firmware in Attacks Against the US and Japan Threat group BlackTech (Palmerworm, Temp.Overboard, Circuit Panda, and Radio Panda) has been performing firmware downgrade attacks. Once the firmware is downgraded, BlackTech can leverage older vulnerabilities to “hot patch old firmware in memory” with custom firmware code. They then can achieve persistence and pivot from “smaller, international subsidiaries to headquarters of affected organizations.”Proof of ConceptPT-2021-01: Encryption bypass when downloading a firmware update in Diebold-Nixdorf CMDv5 “With access to the dispenser controller USB port, an attacker can install an outdated or modified firmware version (with malicious content) to bypass the encryption and withdraw cash.”CWECVECVE-2018-9099 “Encryption bypass when downloading a firmware update in Diebold-Nixdorf CMDv5” The researches demonstrated this exploit by loading outdated and vulnerable firmware." }, { "title": "TID-217", "url": "/threats/TID-217.html", "categories": "System Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-217: Remotely Initiated Updates Can Cause DoSThreat DescriptionWhen firmware/software update process is initiated on a device, it may enter a different operational mode where it stops performin...", "content": "TID-217: Remotely Initiated Updates Can Cause DoSThreat DescriptionWhen firmware/software update process is initiated on a device, it may enter a different operational mode where it stops performing key functions, including networking, data collection, or control functions. Therefore a threat actor could remotely initiate the firmware/software update to cause a denial of service on the device.Threat Maturity and EvidenceObserved Adversary BehaviorATT&amp;CK Technique: Activate Firmware Update Mode (T0800) Procedure Example: Industroyer (S0604) “The Industroyer SIPROTEC DoS module places the victim device into firmware update mode. This is a legitimate use case under normal circumstances, but in this case is used the adversary to prevent the SIPROTEC from performing its designed protective functions. As a result the normal safeguards are disabled, leaving an unprotected link in the electric transmission.”CWECWE-400: Uncontrolled Resource Consumption “The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.”CVECRASHOVERRIDE - CVE-2015-5374 “Specially crafted packets sent to port 50000/UDP could cause a denial-of-service of the affected device. A manual reboot may be required to recover the service of the device.” “The DoS condition places the victim SIPROTEC device in “firmware update” mode. The effect triggered is practical and useful in legitimate firmware update instances given the limited resources available to legacy SIPROTEC devices (especially for memory).”" }, { "title": "TID-218", "url": "/threats/TID-218.html", "categories": "System Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-218: Operating System Susceptible to RootkitThreat DescriptionA threat actor may be able to install a rootkit that can manipulate the operating system (OS). Rootkits can evade OS protections b...", "content": "TID-218: Operating System Susceptible to RootkitThreat DescriptionA threat actor may be able to install a rootkit that can manipulate the operating system (OS). Rootkits can evade OS protections by installing themselves at the same privilege-level as the OS. A threat actor can use a rootkit to maintain persistence on the device, evade detection, or execute malicious programs/logic.Threat Maturity and EvidenceKnown Exploitable WeaknessATT&amp;CK Technique: Rootkit (T0851) Procedure Example: Stuxnet (S0603) “One of Stuxnet’s rootkits is contained entirely in the fake s7otbxdx.dll. In order to continue existing undetected on the PLC it needs to account for at least the following situations: read requests for its own malicious code blocks, read requests for infected blocks (OB1, OB35, DP_RECV), and write requests that could overwrite Stuxnets [sic] own code. Stuxnet contains code to monitor and intercept these types of requests. The rootkit modifies these requests so that Stuxnets [sic] PLC code is not discovered or damaged.”Proof of ConceptGhost in the PLC Researchers Abbasi and Hasemi were able to create the Ghost in the PLC rootkit. This rootkit is able to embed itself in a PLC with detection evasion mechanisms. It is then able to achieve arbitrary read/write in registers with/without root access.Air Force Institute of Technology (AFIT) “Researchers with the U.S. Air Force Institute of Technology (AFIT) have created a prototype rootkit that can sit undetected in the firmware of a programmable logic controller (PLC) device and corrupt utility and plant floor operations.”CWECWE-693: Protection Mechanisms Failure (Pillar) “The product does not use or incorrectly uses a protection mechanism that provides sufficient defense against directed attacks against the product.”CVE" }, { "title": "TID-219", "url": "/threats/TID-219.html", "categories": "System Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-219: OS/Kernel Privilege EscalationThreat DescriptionOperating Systems and Kernels frequently run at the highest levels of permissions. If processes with lower permissions are able to exploit a...", "content": "TID-219: OS/Kernel Privilege EscalationThreat DescriptionOperating Systems and Kernels frequently run at the highest levels of permissions. If processes with lower permissions are able to exploit a vulnerability in the OS or Kernel (such as a vulnerability enabled by TID-206), they may be able to raise the privileges of their process. If a threat actor were to exploit this vulnerability, they may be able to raise the permissions of a malicious process, thereby granting themselves greater access to the device.Threat Maturity and EvidenceObserved Adversary BehaviorATT&amp;CK Technique: Exploitation for Privilege Escalation (T0890) Procedure Example: Triton (S1009) “Triton leverages a previously-unknown vulnerability affecting Tricon MP3008 firmware versions 10.010.4 allows an insecurely-written system call to be exploited to achieve an arbitrary 2-byte write primitive, which is then used to gain supervisor privileges.”CWECWE-250: Execution with Unnecessary Privileges “The product performs an operation at a privilege level that is higher than the minimum level required, which creates new weaknesses or amplifies the consequences of other weaknesses.”CVE" }, { "title": "TID-220", "url": "/threats/TID-220.html", "categories": "System Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-220: Unpatchable Hardware Root of TrustThreat DescriptionHardware roots of trust can be used to support many desirable device security functions, such as secure key and secret storage, secure b...", "content": "TID-220: Unpatchable Hardware Root of TrustThreat DescriptionHardware roots of trust can be used to support many desirable device security functions, such as secure key and secret storage, secure boot, and firmware integrity measurement. These functions often rely on the root of trust being immutable, preventing a threat actor from making changes to code or data in the root of trust that would undermine the security functions built atop them. However, if the root of trust implementation is flawed, immutability prevents the revocation and replacement of compromised keys, and prevents patching vulnerable code. Therefore, if threat actors have access to a mechanism to obtain the secret data or code, and/or those secrets and code are shared over multiple devices and threat actors can obtain them, then devices will remain vulnerable past threat disclosure and may have to be removed from operation and replaced with new patched versions.Threat Maturity and EvidenceKnown Exploitable WeaknessGlitching the Switch The researchers show how they identified an exploitable flaw in the immutable 1st stage boot ROM code of the Nvidia Tegra X1 SoC, which the Nintendo Switch game console is built upon. The secret boot ROM code serves as the root of trust for secure verified boot on the Tegra X1 platform. A buffer overflow vulnerability in the recovery mode of the boot ROM allows a threat actor to bypass firmware verification and execute unauthorize custom or modified firmware on the device. Because the flawed code is stored in unmodifiable memory within the X1 system-on-chip, this vulnerability cannot be patched in hardware revisions that contain it and could only be fixed on newly manufactured Switch consoles.Proof of ConceptUprooting Trust: Learnings from an Unpatchable Hardware Root-of-Trust Vulnerability in Siemens S7-1500 PLCs “The vulnerable ATECC-based RoT hardware implementation is deployed across the Siemens S7-1500 series product line. Because each device is loaded with the exact same cryptographic material used to generate decryption seeds and keys, adversaries may abuse the hardware RoT to decrypt, modify, and re-encrypt firmware for all devices within this family. For example, an ATECC RoT chip may be removed or instrumented from one specific S7-1500 series device, and used to generate valid tampered firmware for a separate device.”CWECWE-1329: Reliance on Component That is Not Updateable “The product contains a component that cannot be updated or patched in order to remove vulnerabilities or significant bugs.”CVE" }, { "title": "TID-221", "url": "/threats/TID-221.html", "categories": "System Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-221: Authentication Bypass By Message ReplayThreat DescriptionSome devices will allow for authentication over the network, but do not implement mechanisms (i.e. nonces, timestamps) to ensure th...", "content": "TID-221: Authentication Bypass By Message ReplayThreat DescriptionSome devices will allow for authentication over the network, but do not implement mechanisms (i.e. nonces, timestamps) to ensure that messages containing credentials cannot be reused. Devices like these are potentially vulnerable to replay attacks. In these attacks, threat actors may be able to take legitimate packets that were sent over the network, capture them, and send them again to the device. If the device accepts these packets, threat actors may be able to initiate unauthorized actions. Additionally, if threat actors are able to edit the contents of those packets, they can potentially control the device remotely.Threat Maturity and EvidenceObserved Adversary BehaviorATT&amp;CK T1212 Exploitation for Credential Access “Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don’t properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges.”CWECWE-294: Authentication Bypass by Capture-replay “A capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).”CVE" }, { "title": "TID-222", "url": "/threats/TID-222.html", "categories": "System Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-222: Critical System Service May Be DisabledThreat DescriptionVarious devices and associated services are necessary to support communications and connections on a network. If a key service is d...", "content": "TID-222: Critical System Service May Be DisabledThreat DescriptionVarious devices and associated services are necessary to support communications and connections on a network. If a key service is disabled, terminated, or reconfigured, a threat actor can disrupt or disable communications on a network. This could occur on various network equipment, such as switches, firewalls, or routers, along with other devices which may have dedicated processes to facilitate communication with specific protocols or physical mediums (e.g., serial).Threat Maturity and EvidenceObserved Adversary BehaviorATT&amp;CK Technique: Service Stop (T0881) Procedure Example: Industroyer (S0604) “Industroyer has the capability to stop a service itself, or to login as a user and stop a service as that user.”Procedure Example: Industroyer2 (S1072) “Industroyer2 has the capability to terminate specified processes (i.e., PServiceControl.exe and PService_PDD.exe) and rename each process to prevent restart. These are defined through a hardcoded configuration.”CWECWE-306 Missing Authentication for Critical Function “The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.”CWE-15: External Control of System or Configuration Setting “One or more system settings or configuration elements can be externally controlled by a user.”CVE" }, { "title": "TID-223", "url": "/threats/TID-223.html", "categories": "System Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-223: System Susceptible to RAM ScrapingThreat DescriptionIf the threat actor can obtain sufficient privileges on the devices, they may be able to install runtime tools to directly extract the c...", "content": "TID-223: System Susceptible to RAM ScrapingThreat DescriptionIf the threat actor can obtain sufficient privileges on the devices, they may be able to install runtime tools to directly extract the contents of some or all of the system RAM. This can grant the actor access to the internal state of other applications executing on the device as they process potentially sensitive data (e.g., password, keys, credentials, financial data, PII, etc.) even if that data is never committed to storage in a file or database. If the access extends to physical RAM, this can enable the threat actor to bypass other inter-process security boundaries created by the operating system.Threat Maturity and EvidenceKnown Exploitable WeaknessHow RAM Scrapers Work: The Sneaky Tools Behind the Latest Credit Card Hacks “There are more than a dozen RAM scrapers sold in the underground market these days. There’s Dexter, Soraya, ChewBacca and BlackPOS to name a few… Once on a targeted system, RAM scrapers work by examining the list of processes that are running on the system and inspecting the memory for data that matches the structure of credit card data, such as the account number, expiration date, and other information stored on a card’s magnetic stripe. Some scrapers are efficient and grab only the golden numbers the attackers seek; others are more sloppy and grab a lot of dirt with their gold.”CWECVE" }, { "title": "TID-224", "url": "/threats/TID-224.html", "categories": "System Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-224: Excessive Access via Software Diagnostic FeaturesThreat DescriptionIf a device has debugging capabilities (e.g., diagnostic tools, debug logs, etc.) that are not authenticated or can be ac...", "content": "TID-224: Excessive Access via Software Diagnostic FeaturesThreat DescriptionIf a device has debugging capabilities (e.g., diagnostic tools, debug logs, etc.) that are not authenticated or can be accessed in unintended ways, it may be possible for a threat actor to attach to these debuggers. Debuggers frequently have privileged access, which would give the threat actors increased access over the device.Threat Maturity and EvidenceObserved Adversary BehaviorATT&amp;CK T1623 Command and Scripting Interpreter “Most systems come with some built-in command-line interface and scripting capabilities, for example, Android is a UNIX-like OS and includes a basic Unix Shell that can be accessed via the Android Debug Bridge (ADB)”Proof of ConceptATM logic attacks: scenarios, 2018 “Starting the ATM operating system in a special mode can offer a way to bypass security… After starting the ATM in debug mode and connecting to the COM ports, an attacker can seize full control of the ATM by using the WinDbg utility.”CWECWE-1295: Debug Messages Revealing Unnecessary Information “The product fails to adequately prevent the revealing of unnecessary and potentially sensitive system information within debugging messages.”CVE" }, { "title": "TID-301", "url": "/threats/TID-301.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-301: Applications Binaries ModifiedThreat DescriptionA threat actor could modify application-level binaries or libraries on the device to introduce unauthorized code, maintain persistence, or e...", "content": "TID-301: Applications Binaries ModifiedThreat DescriptionA threat actor could modify application-level binaries or libraries on the device to introduce unauthorized code, maintain persistence, or evade detection. This could also include the modification of runtime libraries used to support the execution of programs, along with key PLC function blocks used to structure the execution of application function blocks, such as organizational blocks.Threat Maturity and EvidenceObserved Adversarial TechniqueATT&amp;CK Technique: Modify Controller Tasking (T0821) Procedure Example: Stuxnet (S0603) “Stuxnet infects OB1 so that its malicious code sequence is executed at the start of a cycle. It also infects OB35. OB35 acts as a watchdog, and on certain conditions, it can stop the execution of OB1.”CWECWE-862: Missing Authorization “The product does not perform an authorization check when an actor attempts to access a resource or perform an action.”CVE" }, { "title": "TID-302", "url": "/threats/TID-302.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-302: Install Untrusted ApplicationThreat DescriptionA threat actor can install a malicious program to the device to manipulate its operations or prevent the device from operating as expected. D...", "content": "TID-302: Install Untrusted ApplicationThreat DescriptionA threat actor can install a malicious program to the device to manipulate its operations or prevent the device from operating as expected. Devices can utilize a variety of different approaches to support the download, modification, and execution of programs/logic. For example, some devices might support program downloads through traditional operating system interfaces (e.g., Telnet, SSH, RDP), while other devices, such as PLCs, often use proprietary interfaces to deploy and execute IEC 61131 based logic programs. Devices are often dependent on a remote system, such as a Windows workstations, with a vendor-specific application program or IDE to develop and transfer the programs to the device. However, devices often assume that all code originates from that trusted program/IDE, and therefore do not perform any integrity checking of the code before downloading or executing it.Threat Maturity and EvidenceObserved Adversarial TechniqueATT&amp;CK Technique: Program Download (T0843) Procedure Example: Triton (S1009) “Triton leveraged the TriStation protocol to download programs onto Triconex Safety Instrumented System”.Procedure Example: Incontroller (S1045) “The Incontroller software was able to perform program downloads to a controller through a self-contained API.”CWECWE-494: Download of Code Without Integrity Check “The product downloads source code or an executable from a remote location and executes the code without sufficiently verifying the origin and integrity of the code.”CVE" }, { "title": "TID-303", "url": "/threats/TID-303.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-303: Excessive Trust in Offboard Management/IDE SoftwareThreat DescriptionIf device management is intended to be performed by a dedicated engineering software platform or integrated development...", "content": "TID-303: Excessive Trust in Offboard Management/IDE SoftwareThreat DescriptionIf device management is intended to be performed by a dedicated engineering software platform or integrated development environment (IDE), the threat actor could potentially modify the software platform, such as by manipulating key .dlls, to install malicious code or manipulate the operation of the device. This can provide the threat actor with a mechanism to bypass protections/countermeasures.Threat Maturity and EvidenceObserved Adversarial TechniqueATT&amp;CK Technique: Rootkit (T0851) Procedure Example: Stuxnet (S0603) “Stuxnet has the capability, through malicious .DLLs, to intercept read requests and write requests, include those the could overwrite code on the device”Proof of ConceptApplying a Stuxnet Type Attack to a Modicon PLC “Implementing Stuxnet type attacks on PLC’s from other manufacturers is possible. In the case of the Modicon M340, this porting is easier because the PLC executes ARM bytecode natively (and not proprietary assembly code).This exercise gives us the opportunity to extend M340 functionality by developing automation code directly in C. Now we can perform low level actions which are very difficult to do with other languages (e.g Ladder, Grafcet).We developed a program that allows the changing of logical programs on the fly (no need for recompilation – stop – upload – start steps in Unity)”The Old Switcheroo: Hiding Code on Rockwell Automation PLCs “Team82 decided to test for these Stuxnet-type of attacks on the Rockwell Automation PLC platform. Our research uncovered two vulnerabilities that expose the company’s Logix Controllers and Logix Designer application for engineering workstations to attacks that allow threat actors to stealthily modify automation processes.Programmable logic and predefined variables drive these processes, and changes to either will alter normal operation of the PLC and the process it manages. An attacker with the ability to modify PLC logic could cause physical damage to factories that affect the safety of manufacturing assembly lines, the reliability of robotic devices, or in a much more dramatic example, as we saw with Stuxnet, attackers could damage centrifuges at the core of uranium enrichment at a nuclear facility.”CWECWE-114: Process Control (Class) “Executing commands or loading libraries from an untrusted source or in an untrusted environment can cause an application to execute malicious commands (and payloads) on behalf of an attacker.”CVECVE-2022-1159 “Rockwell Automation Studio 5000 Logix Designer (all versions) are vulnerable when an attacker who achieves administrator access on a workstation running Studio 5000 Logix Designer could inject controller code undetectable to a user.”" }, { "title": "TID-304", "url": "/threats/TID-304.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-304: Manipulate Runtime EnvironmentThreat DescriptionA threat actor can manipulate the runtime environments on a device to maintain persistence on the device and overwrite various functionaliti...", "content": "TID-304: Manipulate Runtime EnvironmentThreat DescriptionA threat actor can manipulate the runtime environments on a device to maintain persistence on the device and overwrite various functionalities, such as protocol handlers. If the application program (which the threat actor can deploy on the device through a program download) has access to memory where the runtime environment and libraries are located, they could overwrite these libraries with malicious code. This is especially risky because runtime environments often must allow the dynamic addition of modules/functions to support user-specific customization or configuration of devices, which may require that the runtime support writeable memory.NOTE: This differs from TID-305 because this threat has a focus on code being used to manipulate the device runtime environment itself. TID-305 on the other hand pertains to a malicious program itself being used to perform device actions.Threat Maturity and EvidenceProof of ConceptSecurity Issues In Compiled PLC Logic (CoDeSys &amp; ProConOs) At S4x23, Reid Wightman demonstrated that if memory space is shared between program runtime, program logic, and other device functions such as network handling, it is possible to create malicious programs that can manipulate a device’s runtime environment from the application program.CWECWE-119: Improper Restriction of Operations within the Bounds of a Memory Buffer “The product performs operations on a memory buffer, but it can read from or write to a memory location that is outside of the intended boundary of the buffer.”CVECODESYS Security Advisory 2023-04 (CVE-2022-4046, CVE-2023-28355) “The CODESYS Control V3 runtime system does not restrict the memory accesses of the PLC application code to the PLC application data and does not sufficiently check the integrity of the application code by default. This could be exploited by authenticated PLC programmers.”" }, { "title": "TID-305", "url": "/threats/TID-305.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-305: Program Executes Dangerous System CallsThreat DescriptionIf the device allows the downloading and execution of native binaries on the device, a threat actor can deploy a malicious program ...", "content": "TID-305: Program Executes Dangerous System CallsThreat DescriptionIf the device allows the downloading and execution of native binaries on the device, a threat actor can deploy a malicious program that leverages the environment’s privileges to gain unwanted or excessive access to the device, such as through “dangerous” system calls. These system calls could be used to manipulate the device’s firmware, maintain persistence, execute unwanted logic, or obtain a C2 channel.Additionally, the device may assume the program comes from a trusted integrated development environment (IDE), and therefore does not restrict the privileges or system calls the program can access. However, if the threat actor compiles the program without the IDE, they can violate this assumption.NOTE: This differs from TID-304 because this threat has a focus on a malicious program itself being used to perform device actions. TID-304 on the other hand pertains to code being used to manipulate the device runtime environment itself.Threat Maturity and EvidenceObserved Adversarial TechniqueATT&amp;CK Technique: Exploitation for Privilege Escalation (T0890) Procedure Example: Triton (S1009) “Triton leverages a previously-unknown vulnerability affecting Tricon MP3008 firmware versions 10.010.4 allows an insecurely-written system call to be exploited to achieve an arbitrary 2-byte write primitive, which is then used to gain supervisor privileges.”ATT&amp;CK Technique: Native API (T0834) Procedure Example: Stuxnet (S0603) “Stuxnet calls system function blocks which are part of the operating system running on the PLC. They’re used to execute system tasks, such as reading the system clock (SFC1) and generating data blocks on the fly.”CWE[CWE-250: Execution with Unnecessary Privileges (Base)] “The product performs an operation at a privilege level that is higher than the minimum level required, which creates new weaknesses or amplifies the consequences of other weaknesses.”CVECVE-2018-8872 “In Schneider Electric Triconex Tricon MP model 3008 firmware versions 10.0-10.4, system calls read directly from memory addresses within the control program area without any verification. Manipulating this data could allow attacker data to be copied anywhere within memory.”" }, { "title": "TID-306", "url": "/threats/TID-306.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-306: Sandboxed Environments EscapedThreat DescriptionWhile restricting the execution of external programs within a sandboxed execution environment can mitigate the threat of programs having exc...", "content": "TID-306: Sandboxed Environments EscapedThreat DescriptionWhile restricting the execution of external programs within a sandboxed execution environment can mitigate the threat of programs having excessive privileges or memory access, vulnerabilities within that environment could be exploited to escape the sandbox. This would allow the threat actor to escalate their privileges to more broadly manipulate the device’s operation and evade detections.Threat Maturity and EvidenceProof of ConceptThe Race to Native Code Execution in PLCs Claroty demonstrated in their research that it was possible to break out of the runtime environment on a PLC and execute code natively in protected areas of memory. “Escaping the sandbox means an attacker would be able to read and write from anywhere on the PLC, and could patch an existing VM opcode in memory with malicious code to root the device.”CWECWE-693: Protection Mechanism Failure “The product does not use or incorrectly uses a protection mechanism that provides sufficient defense against directed attacks against the product.”CVECVE-2020-15782 “A vulnerability has been identified in [Siemens devices]… Affected devices are vulnerable to a memory protection bypass through a specific operation. A remote unauthenticated attacker with network access to port 102/tcp could potentially write arbitrary data and code to protected memory areas or read sensitive data to launch further attacks.”" }, { "title": "TID-307", "url": "/threats/TID-307.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-307: Device Code Representations InconsistentThreat DescriptionMany devices that allow the execution of custom application programs, such as IEC 61131 based programs, also support “program uplo...", "content": "TID-307: Device Code Representations InconsistentThreat DescriptionMany devices that allow the execution of custom application programs, such as IEC 61131 based programs, also support “program uploads” to extract the running code from the device for various diagnostic functions. To support the program upload function, the device must provide the IDE with machine readable and human-presentable source code, rather than the executable compiled code. Therefore, the device must store two copies of the code, the source code (used to inform program upload function) and the executed compiled code. If a threat actor can modify the source code in memory, it will prevent the program upload function from accurately uploading/reporting the actual code executing on the device and allow any later downloaded malicious code to stay undetected.Threat Maturity and EvidenceProof of ConceptThe Old Switcheroo: Hiding Code on Rockwell Automation PLCs Claroty researchers were able to edit the code representation that gets uploaded to the EWS during a program upload without having their malicious machine-code also getting uploaded. This resulted in operators seeing code after the program upload that wasn’t the actual code on the machine, which was the Claroty malicious machine code.CWECWE-829: Inclusion of Functionality from Untrusted Control Sphere “The product imports, requires, or includes executable functionality (such as a library) from a source that is outside of the intended control sphere.”CVECVE-2022-1161 “An attacker with the ability to modify a user program may change user program code on some ControlLogix, CompactLogix, and GuardLogix Control systems. Studio 5000 Logix Designer writes user-readable program code to a separate location than the executed compiled code allowing an attacker to change one and not the other.”" }, { "title": "TID-308", "url": "/threats/TID-308.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-308: Code Overwritten to Avoid DetectionThreat DescriptionThe threat actor can overwrite a previously deployed/installed malicious program with a dummy program in order to evade the detection o...", "content": "TID-308: Code Overwritten to Avoid DetectionThreat DescriptionThe threat actor can overwrite a previously deployed/installed malicious program with a dummy program in order to evade the detection of the malicious program. This can be used to prevent detection by monitoring tools or engineering software that performs periodic “Program Uploads” to inspect the contents of a program on the device.While some devices utilize error detection codes, such as CRCs or Checksums, these are not cryptographically strong and a threat actor can easily generate a program with the same CRC/Checksum (i.e., by simply padding the program).Threat Maturity and EvidenceObserved Adversarial TechniqueATT&amp;CK Technique: Indicator Removal on Host (T0872) Procedure Example: Triton (S1009) “Triton would reset the controller to the previous state over TriStation and if this failed it would write a dummy program to memory in what was likely an attempt at anti-forensics.”CWECWE-223: Omission of Security-relevant Information “The product does not record or display information that would be important for identifying the source or nature of an attack, or determining if an action is safe.”CWE-778: Insufficient Logging “When a security-critical event occurs, the product either does not record the event or omits important details about the event when logging it.”CVE" }, { "title": "TID-309", "url": "/threats/TID-309.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-309: Device Exploits Engineering WorkstationThreat DescriptionIf the integrated development environment (IDE) or vendor software that is used to manage a device is not sufficiently secure, it c...", "content": "TID-309: Device Exploits Engineering WorkstationThreat DescriptionIf the integrated development environment (IDE) or vendor software that is used to manage a device is not sufficiently secure, it could be exploited or crashed when it connects to the device, such as during a file transfer or program upload. A threat actor could use a compromised device, such as a PLC, to exploit a vulnerability within the engineering software/IDE used to manage that device. This could be used to (i) gain unauthorized access to the workstation, (ii) perform a DoS on the workstation, or (iii) propagate to other devices managed by that workstation.Threat Maturity and EvidenceProof of ConceptEVIL PLC ATTACK: WEAPONIZING PLCS Claroty was able to install a malicious program on the PLC that would infect a connected EWS upon a program upload. In some cases, they were able to achieve arbitrary code execution on the EWS.Denial of Engineering Operations Attacks in Industrial Control Systems “Specifcally, the attacker can deceive the engineering software during attempts to retrieve the ladder logic program from a programmable logic controller (PLC) by manipulating the ladder logic on the PLC, such that the software is unable to process it while the PLC continues to execute it successfully. This attack vector can provide sufficient cover for the attacker’s actual scenario to play out while the owner tries to understand the problem and reestablish positive operational control.”CWECWE-20: Improper Input Validation “The product receives input or data, but it does not validate or incorrectly validates that the input has the properties that are required to process the data safely and correctly.”CVECVE-2021-22289 “Improper Input Validation vulnerability in the project upload mechanism in B&amp;R Automation Studio version &gt;4.0 may allow an unauthenticated network attacker to execute code.”" }, { "title": "TID-310", "url": "/threats/TID-310.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-310: Remotely Accessible Unauthenticated ServicesThreat DescriptionIf an application does not authenticate all connections from a remote device or system, a threat actor can remotely establish ...", "content": "TID-310: Remotely Accessible Unauthenticated ServicesThreat DescriptionIf an application does not authenticate all connections from a remote device or system, a threat actor can remotely establish a connection to the device to access confidential data or make unwanted changes to device status or configuration.Threat Maturity and EvidenceObserved Adversary TechniqueATT&amp;CK Technique: Unauthorized Command Message (T0855) Procedure Example: Industroyer (S0604) “Using its protocol payloads, Industroyer sends unauthorized commands to RTUs to change the state of equipment.”Procedure Example: Industroyer2 (S1072) “Industroyer2 is capable of sending command messages from the compromised device to target remote stations to open data channels, retrieve the location and values of Information Object Addresses (IOAs), and modify the IO state values through Select Before Operate I/O, Select/Execute, and Invert Default State operations.”CWECWE-285: Improper Authorization “The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.”CVE" }, { "title": "TID-311", "url": "/threats/TID-311.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-311: Default CredentialsThreat DescriptionDevices often include default credentials from the vendor. Default credentials can be changed, but are often overlooked when devices are commissioned....", "content": "TID-311: Default CredentialsThreat DescriptionDevices often include default credentials from the vendor. Default credentials can be changed, but are often overlooked when devices are commissioned. If left unchanged, a threat actor may discover and use these credentials to gain unauthorized access to the device. Non-unique or predictable default credentials can lead to device compromise.Threat Maturity and EvidenceObserved Adversarial TechniqueIRGC-Affiliated Cyber Actors Exploit PLCs in Multiple Sectors, Including U.S. Water and Wastewater Systems Facilities “Since at least November 22, 2023, these IRGC-affiliated cyber actors have continued to compromise default credentials in Unitronics devices.”CWECWE-1392: Use of Default Credentials (Base) “The product uses default credentials (such as passwords or cryptographic keys) for potentially critical functionality.”CWE-1393: Use of Default Password (Base) “The product uses default passwords for potentially critical functionality.”CVEICEFALL - CVE-2022-29962 “The Emerson DeltaV Distributed Control System (DCS) controllers and IO cards through 2022-04-29 misuse passwords. FTP has hardcoded credentials (but may often be disabled in production).”CVE-2021-22681, CISA Alert A hardcoded key in the Studio 5000 Logix Designer software and related PLCs would allow actors who can extract the key from the software to authenticate to controllers without going through the software or normal authentication process." }, { "title": "TID-312", "url": "/threats/TID-312.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-312: Credential Change Mechanism Can Be AbusedThreat DescriptionA device’s credential change mechanisms can be abused to lock out users from their own devices by changing credentials to somethi...", "content": "TID-312: Credential Change Mechanism Can Be AbusedThreat DescriptionA device’s credential change mechanisms can be abused to lock out users from their own devices by changing credentials to something unknown to the legitimate user. This could impair the legitimate user from accessing the device and may also render the device permanently inoperable. This could also be coupled with unwanted device configuration changes before the user is locked out.Threat Maturity and EvidenceObserved Adversarial TechniqueATT&amp;CK Technique: Change Credential (T0892) “A chain of incidents occurred in Germany, where adversaries locked operators out of their building automation system (BAS) controllers by enabling a previously unset BCU key.”ATT&amp;CK Technique: Account Access Removal (T1531) “Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts.”CWECWE-645: Overly Restrictive Account Lockout Mechanism (Base) “The product contains an account lockout protection mechanism, but the mechanism is too restrictive and can be triggered too easily, which allows attackers to deny service to legitimate users by causing their accounts to be locked out.”CVEKunbus PR100088 Modbus Gateway (Update B) | CISA, CVE-2019-6527 “PR100088 Modbus gateway versions prior to Release R02 (or Software Version 1.1.13166) may allow an attacker to be able to change the password for an admin user who is currently or previously logged in, provided the device has not been restarted.”" }, { "title": "TID-313", "url": "/threats/TID-313.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-313: Unauthenticated Session Changes CredentialThreat DescriptionA threat actor can change or reset a password or credential without being authenticated. This can be used by a threat actor to s...", "content": "TID-313: Unauthenticated Session Changes CredentialThreat DescriptionA threat actor can change or reset a password or credential without being authenticated. This can be used by a threat actor to set the credential to a known value and then use this to authenticate to the device.Threat Maturity and EvidenceKnown Exploitable WeaknessATT&amp;CK Technique: Create Account: Local Account (T1136.001) “Adversaries may create a local account to maintain access to victim systems. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service.”CWECWE-287: Improper Authentication “When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.”CVEKunbus PR100088 Modbus Gateway (Update B) | CISA, CVE-2019-6527 “An attacker may be able change the password for an admin user who is currently or previously logged in, provided the device has not been restarted.”" }, { "title": "TID-314", "url": "/threats/TID-314.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-314: Passwords Can Be Guessed Using Brute-Force AttemptsThreat DescriptionA threat actor could gain unauthorized access by continually guessing passwords. This could be because the device allow...", "content": "TID-314: Passwords Can Be Guessed Using Brute-Force AttemptsThreat DescriptionA threat actor could gain unauthorized access by continually guessing passwords. This could be because the device allows passwords with insufficient entropy, short password lengths, or does not have a mechanism to increase the time it takes to randomly guess passwords, such as password lockouts or cooldowns between guesses.Threat Maturity and EvidenceObserved Adversary BehaviorAPT Cyber Tools Targeting ICS/SCADA Devices “Brute-force Schneider Electric PLC passwords using CODESYS and other available device protocols via UDP port 1740 against defaults or a dictionary word list (Note: this capability may work against other CODESYS-based devices depending on individual design and function, and this report will be updated as more information becomes available);”CWECWE-334: Small Space of Random Values “The number of possible random values is smaller than needed by the product, making it more susceptible to brute force attacks.”CWE-307: Improper Restriction of Excessive Authentication Attempts “The product does not implement sufficient measures to prevent multiple failed authentication attempts within a short time frame, making it more susceptible to brute force attacks.”CVE" }, { "title": "TID-315", "url": "/threats/TID-315.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-315: Password Retrieval Mechanism AbusedThreat DescriptionIf the device includes a password retrieval mechanism, a threat actor could use that mechanism to retrieve a valid credential and then ...", "content": "TID-315: Password Retrieval Mechanism AbusedThreat DescriptionIf the device includes a password retrieval mechanism, a threat actor could use that mechanism to retrieve a valid credential and then access the device. Password retrieval functions are typically intended to be used to support access from dedicated device management tools, but these functions may be reverse engineered and then initiated by the threat actor to gain valid credentials on a device.Threat Maturity and EvidenceProof of ConceptAutomationDirect DirectLOGIC with Serial Communication - CVE-2022-2003, Research By Sam Hanson of Dragos “The product is vulnerable to a specifically crafted serial message to the CPU serial port that will cause the PLC to respond with the PLC password in cleartext. This could allow an attacker to access and make unauthorized changes.”CWECWE-319: Cleartext Transmission of Sensitive Information “The product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.”CVECVE-2022-2003 “The product is vulnerable to a specifically crafted serial message to the CPU serial port that will cause the PLC to respond with the PLC password in cleartext. This could allow an attacker to access and make unauthorized changes.”CVE-2022-31205 “The password to access the Web UI can be read from memory using the Omron FINS protocol without any further authentication.”" }, { "title": "TID-316", "url": "/threats/TID-316.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-316: Incorrect Certificate Verification Allows Authentication BypassThreat DescriptionCertificate-based authentication depends on the correct parsing and validation of an X.509 certificate. How...", "content": "TID-316: Incorrect Certificate Verification Allows Authentication BypassThreat DescriptionCertificate-based authentication depends on the correct parsing and validation of an X.509 certificate. However, if the certificate is not properly parsed and all fields are not validated, a threat actor could potentially bypass authentication using a fraudulent certificate.Threat Maturity and EvidenceKnown Exploitable WeaknessCVE-2020-0601 “Microsoft Windows CryptoAPI (Crypt32.dll) contains a spoofing vulnerability in the way it validates Elliptic Curve Cryptography (ECC) certificates. An attacker could exploit the vulnerability by using a spoofed code-signing certificate to sign a malicious executable, making it appear the file was from a trusted, legitimate source. A successful exploit could also allow the attacker to conduct man-in-the-middle attacks and decrypt confidential information on user connections to the affected software. The vulnerability is also known under the moniker of CurveBall.”CVE-2023-41991 “Apple iOS, iPadOS, macOS, and watchOS contain an improper certificate validation vulnerability that can allow a malicious app to bypass signature validation.”CWECVEVulnerability Spotlight: WolfSSL library X.509 Certificate Text Parsing Code Execution Vulnerability “Talos is disclosing TALOS-2017-0293 / CVE 2017-2800, a code execution vulnerability in WolfSSL. WolfSSL is a lightweight SSL/TLS library targeted specifically for embedded and RTOS (Real-Time Operating System) environments, due largely to its small size and performance. WolfSSL is used in a wide range of products including ICS and IoT devices.”Siemens RuggedCom ROX-based Devices Certificate Verification Vulnerability and GnuTLS Certificate Error handling Vulnerability, CVE-2014-0092 “lib/x509/verify.c in GnuTLS before 3.1.22 and 3.2.x before 3.2.12 does not properly handle unspecified errors when verifying X.509 certificates from SSL servers, which allows man-in-the-middle attackers to spoof servers via a crafted certificate.”" }, { "title": "TID-317", "url": "/threats/TID-317.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-317: Predictable Cryptographic KeyThreat DescriptionIf the device does not generate sufficiently random cryptographic primitives, a threat actor could predict or brute-force guess a key to eith...", "content": "TID-317: Predictable Cryptographic KeyThreat DescriptionIf the device does not generate sufficiently random cryptographic primitives, a threat actor could predict or brute-force guess a key to either gain unauthorized access to the device or decrypt a connection. Cryptographic keys that are not generated with random “seed” information, including from Pseudo-Random Number Generators (PRNG), will lack sufficient entropy. For example, researchers have demonstrated that a large number of Internet exposed devices with TLS or SSH services utilized the same RSA moduli, which could be then used to determine the device’s private key and then used to remotely authenticate with the device.Threat Maturity and EvidenceProof of ConceptHeninger, N. et al. “Mining Your Ps and Qs: Detection of Widespread Weak Keys in Network Devices” Researchers demonstrated that many internet connected devices had insufficient randomness in their TLS certificates. Additionaly, many of these devices had the same key as other devices. Lastly, for some of these keys, it was possible for researchers to derive private keys.CWECWE-331: Insufficient Entropy (Base) “The product uses an algorithm or scheme that produces insufficient entropy, leaving patterns or clusters of values that are more likely to occur than others.”CWE-338: Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG) (Base)“The product uses a Pseudo-Random Number Generator (PRNG) in a security context, but the PRNG’s algorithm is not cryptographically strong.”CVEHoneywell OneWireless Wireless Device Manager | CISA - CVE-2022-43485 “Use of Insufficiently Random Values in Honeywell OneWireless. This vulnerability may allow attacker to manipulate claims in client’s JWT token. This issue affects OneWireless version 322.1”Tropos Wireless Mesh Routers | CISA - CVE-2012-4898 “Mesh OS before 7.9.1.1 on Tropos wireless mesh routers does not use a sufficient source of entropy for SSH keys, which makes it easier for man-in-the-middle attackers to spoof a device or modify a client-server data stream by leveraging knowledge of a key from a product installation elsewhere.”" }, { "title": "TID-318", "url": "/threats/TID-318.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-318: Insecure Cryptographic ImplementationThreat DescriptionThe device uses a cryptographic library or implementation that either introduces an additional software vulnerability within the libr...", "content": "TID-318: Insecure Cryptographic ImplementationThreat DescriptionThe device uses a cryptographic library or implementation that either introduces an additional software vulnerability within the library. A threat actor can exploit these weaknesses or vulnerablities to gain unauthorized access to the device or bypass the protections provided by the cryptographic protocol.Threat Maturity and EvidenceObserved Adversary UseAttackers Exploit the Heartbleed OpenSSL Vulnerability to Circumvent Multi-factor Authentication on VPNs “Beginning on April 8, an attacker leveraged the Heartbleed vulnerability against a VPN appliance and hijacked multiple active user sessions. Specifically, the attacker repeatedly sent malformed heartbeat requests to the HTTPS web server running on the VPN device, which was compiled with a vulnerable version of OpenSSL, to obtain active session tokens for currently authenticated users. With an active session token, the attacker successfully hijacked multiple active user sessions and convinced the VPN concentrator that he/she was legitimately authenticated. The attack bypassed both the organization’s multifactor authentication and the VPN client software used to validate that systems connecting to the VPN were owned by the organization and running specific security software.”CWECVEHeartbleed Bug and Subsequent Exploitation CVE-2014-0160 “The (1) TLS and (2) DTLS implementations in OpenSSL 1.0.1 before 1.0.1g do not properly handle Heartbeat Extension packets, which allows remote attackers to obtain sensitive information from process memory via crafted packets that trigger a buffer over-read, as demonstrated by reading private keys, related to d1_both.c and t1_lib.c, aka the Heartbleed bug.”Siemens RuggedCom ROX-based Devices Certificate Verification Vulnerability and GnuTLS Certificate Error handling Vulnerability CVE-2014-0092 “lib/x509/verify.c in GnuTLS before 3.1.22 and 3.2.x before 3.2.12 does not properly handle unspecified errors when verifying X.509 certificates from SSL servers, which allows man-in-the-middle attackers to spoof servers via a crafted certificate.”" }, { "title": "TID-319", "url": "/threats/TID-319.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-319: Cross Site Scripting (XSS)Threat DescriptionThe device does not properly restrict, filter, or validate the content of web-based requests or outputs, especially content used to construct HT...", "content": "TID-319: Cross Site Scripting (XSS)Threat DescriptionThe device does not properly restrict, filter, or validate the content of web-based requests or outputs, especially content used to construct HTTP or JavaScript elements within a web page. A threat actor can add malicious JavaScript to an HTTP request, including through a GET/POST parameter or HTTP header fields, which then executes on the browser of an unsuspecting user. The malicious JavaScript can then be used to steal session tokens or send malicious requests (especially leveraging XMLHttpRequest) to change device configurations or data.Threat Maturity and EvidenceKnown Exploitable WeaknessATT&amp;CK Technique: Drive-by Compromise (T1189) “Multiple ways of delivering exploit code to a browser exist (i.e., Drive-by Target), including: A legitimate website is compromised where adversaries have injected some form of malicious code such as JavaScript, iFrames, and cross-site scripting.”CWECWE-79: Improper Neutralization of Input During Web Page Generation (‘Cross-site Scripting’) (Base) “The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.”CVENetComm Wireless 4G LTE Light Industrial M2M Router - CVE-2018-14784 “The device is vulnerable to several cross-site scripting attacks, allowing a remote attacker to run arbitrary code on the device.”Siemens SIMATIC S7-1500 CPU Firmware Vulnerabilities, CISA “The integrated web server may … be vulnerable to cross-site request forgery (CSRF), cross-site scripting (XSS), header injection, and open redirect attacks as well as privilege escalation.”" }, { "title": "TID-320", "url": "/threats/TID-320.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-320: SQL InjectionThreat DescriptionThe device does not property restrict, filter, or validate the content of web-based requests, especially content used to construct SQL commands or HTTP pages...", "content": "TID-320: SQL InjectionThreat DescriptionThe device does not property restrict, filter, or validate the content of web-based requests, especially content used to construct SQL commands or HTTP pages. A threat actor can add malicious content to these messages to cause unwanted code to execute on the device. SQL injection can be used to execute unauthorized commands (e.g., xp_cmdshell), or to manipulate or extract sensitive data within the database.Threat Maturity and EvidenceKnown Exploitable WeaknessATT&amp;CK Technique: Server Software Component: SQL Stored Procedures (T1505.001) Procedure Example: Stuxnet (S0603) “Stuxnet used xp_cmdshell to store and execute SQL code.”ATT&amp;CK Technique: Exploit Public-Facing Application (T1190) Various threat actors have leveraged SQL injection to gain initial access to publicly facing web applications, including APT28, APT 39, and DragonFly.CWECWE-89: Improper Neutralization of Special Elements used in an SQL Command (‘SQL Injection’) “The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.”CVECSWorks Software SQL Injection Vulnerability, CISA - CVE-2014-2351 “The CSWorks software does not properly sanitize or validate the data used to construct read and write paths, which may make applications built with the affected product to be susceptible to an SQL injection attack. Depending on the intended use of the application, an attacker may be able to exploit this vulnerability to achieve remote code execution.”Navis WebAccess SQL Injection Vulnerability, CISA “The WebAccess application does not properly sanitize input that may allow a remote attacker to read, modify, and affect availability of data in the SQL database.”" }, { "title": "TID-321", "url": "/threats/TID-321.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-321: HTTP Application Session HijackingThreat DescriptionA threat actor can hijack an insufficiently protected HTTP session token to gain unauthorized access to a device. HTTP session tokens ca...", "content": "TID-321: HTTP Application Session HijackingThreat DescriptionA threat actor can hijack an insufficiently protected HTTP session token to gain unauthorized access to a device. HTTP session tokens can be obtained by a threat actor if they’re sent unencrypted over the network or if the site is vulnerable to cross-site scripting (XSS).Threat Maturity and EvidenceKnown Exploitable WeaknessATT&amp;CK T1539 Steal Web Session Cookie “An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials.”CWECWE-384: Session Fixation (Composite) “Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.”CVESiemens SICAM Q100 - CVE-2022-43398 Siemens SICAM Q100 devices does not renew session tokens/cookies between logins.MOXA NPort IAW5000A-I/O Series - CVE-2020-25198 The built-in WEB server for MOXA NPort IAW5000A-I/O firmware version 2.1 or lower has incorrectly implemented protections from session fixation, which may allow an attacker to gain access to a session and hijack it by stealing the user’s cookies." }, { "title": "TID-322", "url": "/threats/TID-322.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-322: Cross Site Request Forgery (CSRF)Threat DescriptionIf a threat actor can include malicious JavaScript within a page viewed by a legitimate device user, that script can send malicious authe...", "content": "TID-322: Cross Site Request Forgery (CSRF)Threat DescriptionIf a threat actor can include malicious JavaScript within a page viewed by a legitimate device user, that script can send malicious authenticated HTTP requests (using XMLHttpRequest) to the device. Due to the Same Origin Policy defined by most web browsers, the HTTP requests sent to the device will include any valid session tokens the user/browser has previously established for that device. Therefore, this could be used to send malicious requests to a device to change key functions or configurations, including changing device credentials. This requires that the threat actor tricks the user into viewing another page while they have an authenticated session with the device.Threat Maturity and EvidenceObserved Adversarial TechniqueRouter Exploit Kits: An overview of RouterCSRF attacks and DNS hijacking in Brazil “From February 1 until March 30, 2019, Avast’s Web Shield blocked more than 4.6 million cross-site request forgery (CSRF) web-based attacks in Brazil, attempting to silently modify DNS settings on routers.”Web-based attack targeting home routers, the Brazilian way “We spotted an interesting attack from Brazilian bad guys aiming to change the DNS settings of home routers by using a web-based attack, some social engineering, and malicious websites. In these attacks the malicious DNS servers configured in the user’s network device are pointed towards phishing pages of Brazilian Banks, programmed to steal financial credentials.”CWECWE-352: Cross-Site Request Forgery (CSRF) (Compound) “The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.”CVEXZERES 442SR Wind Turbine CSRF Vulnerability - CVE-2015-3950 “The 442SR OS recognizes both the POST and GET methods for data input. By using the GET method, an attacker may retrieve the ID from the browser and will allow the default user ID to be changed. The default user has admin rights to the entire system.”Fox DataDiode Proxy Server CSRF Vulnerability - CVE-2014-2358 “The administrative web interface of the Fox DataDiode proxy server is vulnerable to CSRF. By changing the configuration, the attacker can effectively disrupt the flow of information through the Fox DataDiode, resulting in a DoS.”Siemens SIMATIC S7-1200 CSRF Vulnerability - CVE-2015-5698 “The integrated web server (Port 80/TCP and Port 443/TCP) of the affected programmable logic controllers (PLCs) could allow remote attackers to perform actions with the permissions of a victim user, provided the victim user has an active session and is induced to trigger the malicious request.”Schneider Electric ION Power Meter CSRF Vulnerability “NCCIC/ICS-CERT is aware of a public report of a cross site request forgery (CSRF) vulnerability with proof-of-concept (PoC) exploit code affecting Schneider Electric’s ION Power Meter products. According to this report, exploitation of this vulnerability can allow unauthorized actions on the device, such as configuration parameter changes and saving modified configuration.”NetComm Wireless 4G LTE Light Industrial M2M Router - CVE-2018-14783 “A cross-site request forgery condition can occur, allowing an attacker to change passwords of the device remotely.”" }, { "title": "TID-323", "url": "/threats/TID-323.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-323: HTTP Path TraversalThreat DescriptionA threat actor can send requests for files or content that resides in different directories from those intended to be accessible by the a web server. T...", "content": "TID-323: HTTP Path TraversalThreat DescriptionA threat actor can send requests for files or content that resides in different directories from those intended to be accessible by the a web server. This can be used to gain access to data that is not intended to be remotely accessible through the web servers, such as files from the operating system or other applications. This threat is primarily a result of the web server having excessive privileges regarding files and directories on the deviceThreat Maturity and EvidenceObserved Adversary BehaviorFortinet FortiOS SSL VPN Path Traversal Vulnerability “Fortinet FortiOS SSL VPN web portal contains a path traversal vulnerability that may allow an unauthenticated attacker to download FortiOS system files through specially crafted HTTP resource requests.”CWECWE-22: Path Traversal “The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.”CVECVE-2018-13379 “An Improper Limitation of a Pathname to a Restricted Directory (“Path Traversal”) in Fortinet FortiOS 6.0.0 to 6.0.4, 5.6.3 to 5.6.7 and 5.4.6 to 5.4.12 and FortiProxy 2.0.0, 1.2.0 to 1.2.8, 1.1.0 to 1.1.6, 1.0.0 to 1.0.7 under SSL VPN web portal allows an unauthenticated attacker to download system files via special crafted HTTP resource requests.”CVE-2023-39810 “An issue in the CPIO command of Busybox v1.33.2 allows attackers to execute a directory traversal.”IDS RTU 850 Directory Traversal Vulnerability - CVE-2015-3939 “Using this vulnerability, an attacker is able to access some files from the internal service interface of the communication module. One of the accessible files contains the credentials (passwords) to access the internal service interface via telnet.”Honeywell XL Web Controller Directory Traversal Vulnerability - CVE-2015-0984 “By using a directory traversal vulnerability in the FTP server, it is possible to gain access to the web root directory.”" }, { "title": "TID-324", "url": "/threats/TID-324.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-324: HTTP Direct Object ReferenceThreat DescriptionIf a device does not properly authenticate all HTTP requests, a threat actor can directly send a request to a specific URL to access data or i...", "content": "TID-324: HTTP Direct Object ReferenceThreat DescriptionIf a device does not properly authenticate all HTTP requests, a threat actor can directly send a request to a specific URL to access data or initiate a device function. This could be used to access/download sensitive data or perform unwanted changes to settings or functions on a device. This typically requires that the threat actor directly knows the URL of the specific file/object/page, rather than depending on the existing links provided by the web application. This is especially problematic for files hosted on a web server (e.g., txt, pdf) since the authentication mechanisms provided by the web application framework may not enforce access controls on those files.Threat Maturity and EvidenceKnown Exploitable WeaknessTelerik UI for ASP.NET AJAX Insecure Direct Object Reference Vulnerability “Telerik UI for ASP.NET AJAX contains an insecure direct object reference vulnerability in RadAsyncUpload that can result in file uploads in a limited location and/or remote code execution.”CWECWE-639: Authorization Bypass Through User-Controlled Key “The system’s authorization functionality does not prevent one user from gaining access to another user’s data or record by modifying the key value identifying the data.”CVEIagona ScrutisWeb - CVE-2023-38257 “Iagona ScrutisWeb versions 2.1.37 and prior are vulnerable to an insecure direct object reference vulnerability that could allow an unauthenticated user to view profile information, including user login names and encrypted passwords.”" }, { "title": "TID-325", "url": "/threats/TID-325.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-325: HTTP Injection/Response SplittingThreat DescriptionThe device uses HTTP headers that are unencrypted, not-validated, and/or unauthenticated. This means that the device may accept and proce...", "content": "TID-325: HTTP Injection/Response SplittingThreat DescriptionThe device uses HTTP headers that are unencrypted, not-validated, and/or unauthenticated. This means that the device may accept and process arbitrary data coming to the receiving web-server over the network. Threat actors may therefore be able to inject their own information into the header, possibly using their input to get more information than they should have access to or exploiting a vulnerability on the receiving device.Threat Maturity and EvidenceProof of Concept“Divide and Conquer”: HTTP Response Splitting, Web Cache Poisoning Attacks, and Related Topics White paper This white paper describes the outlines of how an HTTP Response Splitting attack can take place, the follow-up attacks that are possible, and the impact they can have on machines. He conducts sample attacks in a lab environment.CWECVECogent DataHub XSS and CRLF - CVE-2012-0310 “An HTTP header injection vulnerability (also known as carriage return line feed) exists in the Cogent DataHub application as the product does not validate or incorrectly validates input that can affect the control flow or data flow of a program.”" }, { "title": "TID-326", "url": "/threats/TID-326.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-326: Insecure DeserializationThreat DescriptionMany object oriented languages use serialization to convert class objects into byte strings for more efficient storage or transmission. However, ...", "content": "TID-326: Insecure DeserializationThreat DescriptionMany object oriented languages use serialization to convert class objects into byte strings for more efficient storage or transmission. However, if an untrusted byte string is deserialized without properly validating its contents, it could be used to exploit a vulnerability in the associated library. A threat actor could send a maliciously crafted serialized object to a device to exploit a deserialization vulnerability within a device.Threat Maturity and EvidenceObserved Adversary BehaviorNow You Serial, Now You Don’t — Systematically Hunting for Deserialization Exploits Mandiant has reported that between the years 2019-2021 APT41 used .NET ViewState and Java deserialization vulnerabilities in their campaigns.Known Exploited VulnerabilityKentico Xperience Deserialization of Untrusted Data Vulnerability “An issue was discovered in Kentico 12.0.x before 12.0.15, 11.0.x before 11.0.48, 10.0.x before 10.0.52, and 9.x versions. Due to a failure to validate security headers, it was possible for a specially crafted request to the staging service to bypass the initial authentication and proceed to deserialize user-controlled .NET object input. This deserialization then led to unauthenticated remote code execution on the server where the Kentico instance was hosted.”CWECWE-502: Deserialization of Untrusted Data (Base) “The product deserializes untrusted data without sufficiently verifying that the resulting data will be valid.”CVERockwell Automation ISaGRAF - CVE-2022-1118 “Connected Components Workbench, ISaGRAF Workbench, and Safety Instrumented System Workstation do not limit the objects that can be deserialized. This allows attackers to craft a malicious serialized object that, if opened by a local user in Connected Components Workbench, may result in arbitrary code execution. This vulnerability requires user interaction to be successfully exploited.”Medtronic Paceart Optima System - CVE-2023-31222 “Deserialization of untrusted data in Microsoft Messaging Queuing Service in Medtronic’s Paceart Optima versions 1.11 and earlier on Windows allows an unauthorized user to impact a healthcare delivery organization’s Paceart Optima system cardiac device causing data to be deleted, stolen, or modified, or the Paceart Optima system being used for further network penetration via network connectivity.”CVE-2021-4104 “JMSAppender in Log4j 1.2 is vulnerable to deserialization of untrusted data when the attacker has write access to the Log4j configuration. The attacker can provide TopicBindingName and TopicConnectionFactoryBindingName configurations causing JMSAppender to perform JNDI requests that result in remote code execution in a similar fashion to CVE-2021-44228.”" }, { "title": "TID-327", "url": "/threats/TID-327.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-327: Out of Bounds Memory AccessThreat DescriptionIf an application does not properly restrict data writes to allocated memory locations, a threat actor could send an input or message that writ...", "content": "TID-327: Out of Bounds Memory AccessThreat DescriptionIf an application does not properly restrict data writes to allocated memory locations, a threat actor could send an input or message that writes data outside of intended or allowed memory locations. By overwriting memory locations, an attacker can possibly hijack the control-flow of the program to remotely execute their own code or cause a DoS on the device.Threat Maturity and EvidenceKnown Exploitable WeaknessTenda AC11 Router Stack Buffer Overflow Vulnerability “Tenda AC11 devices contain a stack buffer overflow vulnerability in /goform/setmac which allows attackers to execute code via a crafted post request.”Tenda AC11 Router Stack Buffer Overflow Vulnerability “An issue was discovered on Tenda AC11 devices with firmware through 02.03.01.104_CN. A stack buffer overflow vulnerability in /goform/setmac allows attackers to execute arbitrary code on the system via a crafted post request.”Amcrest Cameras and NVR Stack-based Buffer Overflow Vulnerability “Amcrest cameras and NVR contain a stack-based buffer overflow vulnerability through port 37777 that allows an unauthenticated, remote attacker to crash the device and possibly execute code.”CWECWE 1218: Memory Buffer Errors This a weakness category related to the handling of memory buffers within a software system. It is possible that any of these weaknesses can lead to the development of a vulnerability to exploit in a given device.CVESiemens ICS Switches Hit With Buffer Overflow, Authentication Bugs A buffer overflow present on Siemens ICS switches could allow threat actors to gain the ability to take administrative actions on switches." }, { "title": "TID-328", "url": "/threats/TID-328.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-328: Hardcoded CredentialsThreat DescriptionHardcoded credentials typically cannot be changed by end-users and are often undocumented, leaving the end-user unaware of the risk. If a threat acto...", "content": "TID-328: Hardcoded CredentialsThreat DescriptionHardcoded credentials typically cannot be changed by end-users and are often undocumented, leaving the end-user unaware of the risk. If a threat actor is able to discover the credentials for a device (or family of devices with the same password), they may be able to exploit multiple devices with no known device-level mitigation. Hardcoded credentials are often intended for vendor-specific diagnostic functions or to authenticate components designed to communicate together (e.g., a PLC and associated IED), but can be abused by threat actors when discovered.Threat Maturity and EvidenceObserved Adversary BehaviorATT&amp;CK Technique: Hardcoded Credentials (T0891) Procedure Example: Incontroller (S1045) “INCONTROLLER can login to Omron PLCs using hardcoded credentials, which is documented in CVE-2022-34151”Known Exploitable WeaknessZyxel Multiple Products Use of Hard-Coded Credentials Vulnerability “Zyxel firewalls (ATP, USG, VM) and AP Controllers (NXC2500 and NXC5500) contain a use of hard-coded credentials vulnerability in an undocumented account (“zyfwp”) with an unchangeable password.”CWECWE-798: Use of Hard-coded Credentials “The product contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.”CVE" }, { "title": "TID-329", "url": "/threats/TID-329.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-329: Improper Password StorageThreat DescriptionIf a device stores passwords in an unsafe manner (e.g., in a cleartext file with no read restrictions) it may be possible for threat actors to re...", "content": "TID-329: Improper Password StorageThreat DescriptionIf a device stores passwords in an unsafe manner (e.g., in a cleartext file with no read restrictions) it may be possible for threat actors to retrieve system or user account passwords for that device. Threat actors can then use obtained passwords to increase their privileges and perform actions on the device or move laterally to other systems. Unsafe storage techniques can include storing passwords in cleartext, encrypting instead of hashing passwords, using weak hashing algorithms, or not using salted hashes.Threat Maturity and EvidenceKnown Exploitable WeaknessD-Link DIR-300 Router Cleartext Storage of a Password Vulnerability“The D-Link DIR-300 router stores cleartext passwords, which allows context-dependent attackers to obtain sensitive information.”CWECWE-257: Storing Passwords in a Recoverable Format “The storage of passwords in a recoverable format makes them subject to password reuse attacks by malicious users. In fact, it should be noted that recoverable encrypted passwords provide no significant benefit over plaintext passwords since they are subject not only to reuse by malicious attackers but also by malicious insiders. If a system administrator can recover a password directly, or use a brute force search on the available information, the administrator can use the password on other accounts.”CVESiemens S7-1200 Insecure Storage of HTTPS CA Certificate - CVE-2012-3037 “The certificate authority (CA) for HTTPS connections, which is installed on Siemens SIMATIC S7-1200 PLC, stores its private key insecurely. This key is used for signing certificates. Once this key is obtained, an attacker may create a forged certificate. This can then be used to complete a Man-in-the-Middle attack on a browser that already trusts this device’s CA.”" }, { "title": "TID-330", "url": "/threats/TID-330.html", "categories": "Application Software", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-330: Cryptographic Timing Side-ChannelThreat DescriptionAlgorithms or code implementations of cryptographic processes will sometimes leak information by ending operations early or late based on...", "content": "TID-330: Cryptographic Timing Side-ChannelThreat DescriptionAlgorithms or code implementations of cryptographic processes will sometimes leak information by ending operations early or late based on, and correlated with, the input/key.If a threat actor is able to execute code on a processor performing a cryptographic operation, they may be able to infer the resulting key from that operation by measuring the timing it takes to perform the various functions.For example, if a function like memcpy (which performs byte-by byte comparison) is used to check an HMAC value, by measuring the time it takes for the function to execute, the length of time needed to brute force guess a key can be significantly reduced.Threat Maturity and EvidenceKnown Exploitable WeaknessXBOX 360 HMAC Comparison “A memcmp function is used to check the CB-auth HMAC-hash value. The value is 16-bytes long and is done byte-by-byte wise. By changing one byte at a time it’s possible to determine if a byte is the valid (true) by measuring the time to compare a false and a true value. Measuring each byte will in the end reveal the correct hash and the boot process can continue.The time differences for a valid and false value is about 2200 microseconds.Possibilities: 16 bytes * 256 different possibility for each byte, total 4096 tries. Statistically only half has to be tried, 2048 tries.”CWECWE-208: Observable Timing Discrepancy (Base) “Two separate operations in a product require different amounts of time to complete, in a way that is observable to an actor and reveals security-relevant information about the state of the product, such as whether a particular operation was successful or not.”CWE-1254: Incorrect Comparison Logic Granularity (Base) “The product’s comparison logic is performed over a series of steps rather than across the entire string in one operation. If there is a comparison logic failure on one of these steps, the operation may be vulnerable to a timing attack that can result in the interception of the process for nefarious purposes.”CVE" }, { "title": "TID-401", "url": "/threats/TID-401.html", "categories": "Networking", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-401: Undocumented Protocol FeaturesThreat DescriptionSome devices may support proprietary protocols, or may add proprietary functionality to open protocols. Many of the custom functions or comm...", "content": "TID-401: Undocumented Protocol FeaturesThreat DescriptionSome devices may support proprietary protocols, or may add proprietary functionality to open protocols. Many of the custom functions or commands may not be sufficiently documented. If users aren’t aware of these functions/commands, they cannot be expected to properly configure the device to remove unwanted functionality. Further, they are limited in their ability to monitor the device for any potential malicious use of these functions/commands to exploit devices.Threat Maturity and EvidenceProof of ConceptThe Vulnerability Can Lead to Native Remote-Code-Execution on Vulnerable PLCs “Armis researchers discovered a new vulnerability (CVE-2021-22779) in Schneider Electric (SE) Modicon PLCs that bypasses security mechanisms added to these PLCs to prevent abuse of undocumented Modbus commands. These undocumented commands can allow full control over the PLC — overwriting critical memory regions, leaking sensitive memory content, or invoking internal functions.”CWECWE-1371: ICS Supply Chain: Poorly Documented or Undocumented Features “Undocumented capabilities and configurations pose a risk by not having a clear understanding of what the device is specifically supposed to do and only do. Therefore possibly opening up the attack surface and vulnerabilities.”CWE-912: Hidden Functionality (Class) “The product contains functionality that is not documented, not part of the specification, and not accessible through an interface or command sequence that is obvious to the product’s users or administrators.”CWE-1059: Insufficient Technical Documentation “The product does not contain sufficient technical or engineering documentation (whether on paper or in electronic form) that contains descriptions of all the relevant software/hardware elements of the product, such as its usage, structure, architectural components, interfaces, design, implementation, configuration, operation, etc.”CVESixnet Universal Protocol Undocumented Function Codes - CVE-2013-2802 Sixnet devices use a universal protocol with 6 undocumented opcodes that can perform remote management functions (e.g., code execution) without authenticationSchneider Electric Modicon Controllers and Software - CVE-2021-22779 “An authentication bypass by spoofing vulnerability exists that could cause unauthorized access in read and write mode to the controller by spoofing the Modbus communication between the engineering software and the controller.”" }, { "title": "TID-404", "url": "/threats/TID-404.html", "categories": "Networking", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-404: Remotely Triggerable Deadlock/DoSThreat DescriptionSome devices will have operating modes that put the device in an inoperable state. Devices may also have network parsing or protocol vuln...", "content": "TID-404: Remotely Triggerable Deadlock/DoSThreat DescriptionSome devices will have operating modes that put the device in an inoperable state. Devices may also have network parsing or protocol vulnerabilities that can put the device in a deadlocked or otherwise unresponsive state. A threat actor may therefore be able to send a message to a device that causes it to enter one of these deadlocked or unresponsive states, rendering the device non-functional or leaving it in an otherwise degraded state. Additionally, if the device does not have a mechanism to reset or recover from this state, it may remain unavailable until it is reset or rebooted, which may require physical operator presence.Threat Maturity and EvidenceObserved Adversary TechniqueATT&amp;CK Technique: Denial of Service (T0814) Procedure Example: Industroyer (S0604) “The Industroyer SIPROTEC DoS module exploits the CVE-2015-5374 vulnerability in order to render a Siemens SIPROTEC device unresponsive. Once this vulnerability is successfully exploited, the target device stops responding to any commands until it is rebooted manually. Once the tool is executed it sends specifically crafted packets to port 50,000 of the target IP addresses using UDP. The UDP packet contains the following 18 byte payload: 0x11 49 00 00 00 00 00 00 00 00 00 00 00 00 00 00 28 9E.”Procedure Example: Backdoor.Oldrea (S0093) “The Backdoor.Oldrea payload has caused multiple common OPC platforms to intermittently crash. This could cause a denial of service effect on applications reliant on OPC communications.”CWECWE-833: Deadlock “The product contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock.”CVECVE-2015-5374 “Specially crafted packets sent to port 50000/UDP could cause a denial-of-service of the affected device. A manual reboot may be required to recover the service of the device.”" }, { "title": "TID-405", "url": "/threats/TID-405.html", "categories": "Networking", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-405: Network Stack Resource ExhaustionThreat DescriptionRemote connections and communications can consume various device resources (e.g., network stack buffers, packet processing, socket connec...", "content": "TID-405: Network Stack Resource ExhaustionThreat DescriptionRemote connections and communications can consume various device resources (e.g., network stack buffers, packet processing, socket connections) that, if exhausted, could lead to the device entering an unresponsive state. A threat actor may attempt to intentionally cause this by sending either repetitive or specially crafted messages to a device to consume resources and cause the device to become unresponsive. The unresponsive state will typically continue for at least the duration of the attack. In some cases it may persist until the device is reset or rebooted, which may require physical operator presence.Threat Maturity and EvidenceObserved Adversary TechniqueATT&amp;CK Technique: Service Stop (T0881) Procedure Example: Industroyer2 (S1072) ”Killing the ‘PService_PDD.exe’ service causes the interruption of any existing communication with target IEC-104 servers, which usually supports at most one active connection at a time. Having interrupted existing connections, Industroyer2 is free to connect to the targets.” This action will prevent other devices from connecting to the IEC-104 servers for as long as the Industroyer2 connection is active.Cisco IOS XR Software DVMRP Memory Exhaustion Vulnerability “Cisco IOS XR Distance Vector Multicast Routing Protocol (DVMRP) incorrectly handles Internet Group Management Protocol (IGMP) packets. Exploitation could allow an unauthenticated, remote attacker to immediately crash the IGMP process or make it consume available memory and eventually crash.”CWECWE-400: Uncontrolled Resource Consumption “The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.”CWE-410: Insufficient Resource Pool “The product’s resource pool is not large enough to handle peak demand, which allows an attacker to prevent others from accessing the resource by using a (relatively) large number of requests for resources.”CVE" }, { "title": "TID-406", "url": "/threats/TID-406.html", "categories": "Networking", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-406: Unauthorized Messages or ConnectionsThreat DescriptionSome devices operate using protocols that have no capacity for network-level authentication, connection, or creation of sessions on-de...", "content": "TID-406: Unauthorized Messages or ConnectionsThreat DescriptionSome devices operate using protocols that have no capacity for network-level authentication, connection, or creation of sessions on-device, therefore allowing a threat actor to establish malicious connections or send malicious data to the device. Authentication mechanisms include passwords and cryptographic keys/certificates.Threat Maturity and EvidenceObserved Adversary TechniqueATT&amp;CK T0860 Wireless Compromise “During the Polish Train incident, a teenager was able to program a remote with commands to operate and change junctions on the tracks. The teenager was able to then send those commands, without authentication, to operate the junctions.”ATT&amp;CK Technique: Unauthorized Command Message (T0855) Procedure Example: INCONTROLLER (S1045) “INCONTROLLER can send custom Modbus commands to write register values on Schneider PLCs.”CWECWE-306: Missing Authentication for Critical Function (Base) “The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.”CWE-287: Improper Authentication (Class) “When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.”CVECVE-2022-30266 / CVE-2022-33139 / CVE-2019-18250 (OT-ICEFALL) Many devices in the OT-ICEFALL report had authentication on the client-side, but not for the protocol. What this means is that while users may think actions are authenticated, actors who are able to send/receive traffic over the network may be able to issue commands without proper authentication.CVE-2019-6533 “Registers used to store Modbus values can be read and written from the web interface without authentication in the PR100088 Modbus gateway versions prior to Release R02 (or Software Version 1.1.13166).”" }, { "title": "TID-407", "url": "/threats/TID-407.html", "categories": "Networking", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-407: Missing Message Replay ProtectionThreat DescriptionThreat actors may be able to replay a message to a device to cause an unwanted function, send an unwanted command, or gain access to priv...", "content": "TID-407: Missing Message Replay ProtectionThreat DescriptionThreat actors may be able to replay a message to a device to cause an unwanted function, send an unwanted command, or gain access to privileged data. Message replaying can be used to bypass non-existant or poorly designed authentication mechanisms lacking proper protections, such as a nonce or timestamp.Threat Maturity and EvidenceObserved Adversary TechniqueATT&amp;CK T0887 Wireless Sniffing “In the Dallas Siren incident, adversaries were able to send command messages to activate tornado alarm systems across the city without an impending tornado or other disaster.”“In Dallas’ case, there are a number of ways that the attack could have been carried out, but the most likely is that someone carried out a “radio replay” attack, which involves recording the radio signal that was broadcast during the latest monthly test of the emergency siren system and playing it back repeatedly on Friday, according to Bastille, a security firm specializing in finding and remediating radio frequency vulnerabilities.”CWECWE-294: Authentication Bypass by Capture-replay (Base) “A capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor changes).”CVESchneider Electric Modicon Modbus Protocol - CVE-2017-6034 “Sensitive information is transmitted in cleartext in the Modicon Modbus protocol, which may allow an attacker to replay the following commands: run, stop, upload, and download.”Sierra Wireless AirLink Raven X EV-DO Vulnerabilities - CVE-2013-2820 “The AirLink Raven X EV-DO is vulnerable to replay attacks that bypass authentication. By sending a series of crafted packets to Port 17336/UDP and Port 17388/UDP, an attacker could reprogram the device’s firmware image. This could allow the attacker to affect the availability of the firmware.”" }, { "title": "TID-408", "url": "/threats/TID-408.html", "categories": "Networking", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-408: Unencrypted Sensitive Data CommunicationThreat DescriptionSome devices do not adequately encrypt communications that includes operational or management information. Without adequate encryp...", "content": "TID-408: Unencrypted Sensitive Data CommunicationThreat DescriptionSome devices do not adequately encrypt communications that includes operational or management information. Without adequate encryption, a threat actor can eavesdrop on the communications to gain access to device operational information, management information, or authentication information such as credentials or keys.Threat Maturity and EvidenceKnown Exploitable WeaknessATT&amp;CK T0842 Network Sniffing “Network sniffing is the practice of using a network interface on a computer system to monitor or capture information regardless of whether it is the specified destination for the information.”ATT&amp;CK T0887 Wireless Sniffing “Adversaries may seek to capture radio frequency (RF) communication used for remote control and reporting in distributed environments.”CWECVESierra Wireless AirLink Raven X EV-DO Vulnerabilities “The AirLink Raven X EV-DO does not use encryption in the update and reprogramming process. By using the passwords and user names that are stored in plain text, an attacker could reprogram the firmware.”OT-ICEFALL - CVE-2022-29954“The BSAP/IP protocol transmits passwords in plaintext”OT-ICEFALL - CVE-2022-30261“The ROC protocol transmits passwords in plaintext.”OT-ICEFALL - CVE-2022-30266“The SRTP protocol transmits passwords in plaintext”OT-ICEFALL - CVE-2022-30312“The Inter-controller (IC) protocol transmits PINs, usernames and passwords in plaintext”OT-ICEFALL - CVE-2022-31204“The password used to restrict engineering operations is transmitted in plaintext”OT-ICEFALL - CVE-2022-29519The ResConf protocol transmits usernames, passwords and session tokens in plaintext.”" }, { "title": "TID-410", "url": "/threats/TID-410.html", "categories": "Networking", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-410: Cryptographic Protocol Side ChannelThreat DescriptionWhile encrypting data can prevent a threat actor from directly obtaining the plaintext communication, a threat actor may be able to inf...", "content": "TID-410: Cryptographic Protocol Side ChannelThreat DescriptionWhile encrypting data can prevent a threat actor from directly obtaining the plaintext communication, a threat actor may be able to infer information about the device or communicated data through side-channel and metadata analysis of encrypted communication sessions. For example, a threat actor could use information about message lengths, sequences, and frequency to infer some or all of the plaintext content of messages.Threat Maturity and EvidenceProof of ConceptClassifying IoT devices in smart environments using network traffic characteristics “This paper shows that IoT devices can be identified with high accuracy based on their network behavior, and sets the stage for future work in detecting misbehaviors resulting from security breaches in teh [sic] smart environment.”Traffic Fingerprinting Attacks on Internet of Things using Machine Learning “However, even if encryption was in place, characteristics of the trafﬁc, such as packet sizes and trafﬁc rates, may expose the user’s current activities”Privacy Attacks to the 4G and 5G Cellular Paging Protocols Using Side Channel Information “Our paper sheds light on an inherent design weakness of the 4G/5G cellular paging protocol which can be exploited by an attacker to not only obtain the victim’s paging occasionbut also to identify the victim’s presence in a particular cell area just from the victim’s soft-identity (e.g., phone number, Twitter handle) with a novel attack called ToRPEDO.”CWECWE-1230: Exposure of Sensitive Information Through Metadata “The product prevents direct access to a resource containing sensitive information, but it does not sufficiently limit access to metadata that is derived from the original, sensitive information.”CVE" }, { "title": "TID-411", "url": "/threats/TID-411.html", "categories": "Networking", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-411: Weak/Insecure Cryptographic ProtocolThreat DescriptionThe device utilizes a weak or insecure cryptographic protocol or algorithm that can be broken or undermined. This could allow the thre...", "content": "TID-411: Weak/Insecure Cryptographic ProtocolThreat DescriptionThe device utilizes a weak or insecure cryptographic protocol or algorithm that can be broken or undermined. This could allow the threat actor to extract plaintext information from encrypted communications, extract cryptographic keys, or bypass authentication mechanisms.A threat actor can utilize various techniques to manipulate these protocols, including brute-force guessing of keys or using cryptanalysis to decipher the text.Threat Maturity and EvidenceKnown Exploitable WeaknessWi-Fi hack caused TK Maxx security breach “TK Maxx’s parent company, TJX, had secured its wireless network using Wired Equivalent Privacy (WEP) — one of the weakest forms of security for wireless LANs… hackers cracked the WEP encryption protocol used to transmit data between price-checking devices, cash registers and computers at a store in Minnesota.”CWECVEEmpirical Study of PLC Authentication Protocols in Industrial Control Systems Researchers Adeen Ayub, Hyunguk Yoo, and Irfan Ahmed discovered eight protocol level authentication vulnerabilities between 5 PLCs. One of the classes of vulnerabilities they discovered was weak encryption schemes.OT-ICEFALL - CVE-2022-30273 “The MDLC protocol offers a legacy encryption mode that encrypts traffic using the Tiny Encryption Algorithm (TEA) block-cipher in ECB mode, which offers no message integrity and reduced confidentiality.”OT-ICEFALL - Weak Cryptography on CODESYS V3 “The encryption scheme uses an insecure mode of operation. The code is encrypted in ECB mode without additional cryptographic authentication and integrity over the ciphertext as a whole.”OT-ICEFALL - CVE-2022-29955 “The BSAP/IP protocol uses weak encryption to transmit passwords.”OT-ICEFALL - CVE-2022-29960 “DES with hardcoded cryptographic keys is used to protect system credentials, engineering files, and sensitive utilities.”" }, { "title": "TID-412", "url": "/threats/TID-412.html", "categories": "Networking", "tags": "", "date": "2024-09-24 15:31:21 -0400", "snippet": "TID-412: Network Routing Capability AbuseThreat DescriptionSome devices will allow for the forwarding of packets to other connected devices (e.g., routing, port forwarding, tunneling, VPN). If the ...", "content": "TID-412: Network Routing Capability AbuseThreat DescriptionSome devices will allow for the forwarding of packets to other connected devices (e.g., routing, port forwarding, tunneling, VPN). If the device is used to forward or route communications, a threat actor could change the forwarding rules or routes. This feature could be used by the threat actor to either (i) disable required forwarding rules to prevent authorized communications or (ii) add new rules that allow unauthorized access to other devices. The threat actor could potentially use this to gain access to devices that are within protected networks or zones.Threat Maturity and EvidenceObserved Adversary TechniqueATT&amp;CK Technique: Connection Proxy (T0884) Procedure Example: Incontroller (S1045) “The INCONTROLLER PLCProxy module can add an IP route to the CODESYS gateway running on Schneider PLCs to allow it to route messages through the PLC to other devices on that network. This allows the malware to bypass firewall rules that prevent it from directly communicating with devices on the same network as the PLC.”CWECWE-306: Missing Authentication for Critical Function (Base) “The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.”CWE-15: External Control of System or Configuration Setting “One or more system settings or configuration elements can be externally controlled by a user.”CVE" } ]
